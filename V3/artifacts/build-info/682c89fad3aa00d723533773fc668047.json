{
	"id": "682c89fad3aa00d723533773fc668047",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"Interface/Iemploye_assignment.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\n/// @title Employee Assignment Interface\r\n/// @notice Interface for role-based access control with owner and employee management\r\n/// @dev Provides function definitions for employee role management and ownership control\r\ninterface IEmployeeAssignment {\r\n    \r\n    // ================================\r\n    // Events\r\n    // ================================\r\n    \r\n    /// @notice Emitted when a new employee is assigned\r\n    /// @param employee The address of the newly assigned employee\r\n    /// @param role The role assigned to the employee\r\n    event EmployeeAssigned(address indexed employee, string role);\r\n    \r\n    /// @notice Emitted when an employee is removed\r\n    /// @param employee The address of the removed employee\r\n    /// @param role The role that was removed\r\n    event EmployeeRemoved(address indexed employee, string role);\r\n    \r\n    /// @notice Emitted when the contract owner is changed\r\n    /// @param oldOwner The address of the previous owner\r\n    /// @param newOwner The address of the new owner\r\n    event OwnerChanged(address indexed oldOwner, address indexed newOwner);\r\n    \r\n    // ================================\r\n    // State Variables Getters\r\n    // ================================\r\n    \r\n    /// @notice Get total number of employees currently assigned\r\n    /// @return uint Total employee count\r\n    function employeeCount() external view returns (uint);\r\n    \r\n    // ================================\r\n    // Employee Management Functions\r\n    // ================================\r\n    \r\n    /**\r\n     * @notice Assigns a new employee with a specific role\r\n     * @dev Only the owner can assign new employees\r\n     * @param newEmployee Address of the employee to be assigned\r\n     * @param role Role to assign to the employee\r\n     */\r\n    function assignNewEmployee(address newEmployee, string calldata role) external;\r\n    \r\n    /**\r\n     * @notice Removes an employee's role\r\n     * @dev Only the owner can remove employee roles\r\n     * @param employee Address of the employee to remove the role from\r\n     * @param role Role to remove from the employee\r\n     */\r\n    function removeEmployee(address employee, string calldata role) external;\r\n    \r\n    /**\r\n     * @notice Checks if an address has a specific role\r\n     * @param account Address to check\r\n     * @param role Role to check for\r\n     * @return bool True if the account has the specified role\r\n     */\r\n    function hasRole(address account, string calldata role) external view returns (bool);\r\n    \r\n    // ================================\r\n    // Ownership Management Functions\r\n    // ================================\r\n    \r\n    /**\r\n     * @notice Transfers ownership to a new address\r\n     * @dev Only the current owner can call this function\r\n     * @param newOwner Address of the new owner\r\n     */\r\n    function changeOwner(address newOwner) external;\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"Interface/Iemploye_assignment.sol": {
				"IEmployeeAssignment": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "employee",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "role",
									"type": "string"
								}
							],
							"name": "EmployeeAssigned",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "employee",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "role",
									"type": "string"
								}
							],
							"name": "EmployeeRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnerChanged",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newEmployee",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "role",
									"type": "string"
								}
							],
							"name": "assignNewEmployee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "changeOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "employeeCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "role",
									"type": "string"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "employee",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "role",
									"type": "string"
								}
							],
							"name": "removeEmployee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Provides function definitions for employee role management and ownership control",
						"events": {
							"EmployeeAssigned(address,string)": {
								"params": {
									"employee": "The address of the newly assigned employee",
									"role": "The role assigned to the employee"
								}
							},
							"EmployeeRemoved(address,string)": {
								"params": {
									"employee": "The address of the removed employee",
									"role": "The role that was removed"
								}
							},
							"OwnerChanged(address,address)": {
								"params": {
									"newOwner": "The address of the new owner",
									"oldOwner": "The address of the previous owner"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"assignNewEmployee(address,string)": {
								"details": "Only the owner can assign new employees",
								"params": {
									"newEmployee": "Address of the employee to be assigned",
									"role": "Role to assign to the employee"
								}
							},
							"changeOwner(address)": {
								"details": "Only the current owner can call this function",
								"params": {
									"newOwner": "Address of the new owner"
								}
							},
							"employeeCount()": {
								"returns": {
									"_0": "uint Total employee count"
								}
							},
							"hasRole(address,string)": {
								"params": {
									"account": "Address to check",
									"role": "Role to check for"
								},
								"returns": {
									"_0": "bool True if the account has the specified role"
								}
							},
							"removeEmployee(address,string)": {
								"details": "Only the owner can remove employee roles",
								"params": {
									"employee": "Address of the employee to remove the role from",
									"role": "Role to remove from the employee"
								}
							}
						},
						"title": "Employee Assignment Interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"assignNewEmployee(address,string)": "a5623ffc",
							"changeOwner(address)": "a6f9dae1",
							"employeeCount()": "9047bf58",
							"hasRole(address,string)": "217fe6c6",
							"removeEmployee(address,string)": "559b9b4c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"employee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"role\",\"type\":\"string\"}],\"name\":\"EmployeeAssigned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"employee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"role\",\"type\":\"string\"}],\"name\":\"EmployeeRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newEmployee\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"role\",\"type\":\"string\"}],\"name\":\"assignNewEmployee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"employeeCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"role\",\"type\":\"string\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"employee\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"role\",\"type\":\"string\"}],\"name\":\"removeEmployee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides function definitions for employee role management and ownership control\",\"events\":{\"EmployeeAssigned(address,string)\":{\"params\":{\"employee\":\"The address of the newly assigned employee\",\"role\":\"The role assigned to the employee\"}},\"EmployeeRemoved(address,string)\":{\"params\":{\"employee\":\"The address of the removed employee\",\"role\":\"The role that was removed\"}},\"OwnerChanged(address,address)\":{\"params\":{\"newOwner\":\"The address of the new owner\",\"oldOwner\":\"The address of the previous owner\"}}},\"kind\":\"dev\",\"methods\":{\"assignNewEmployee(address,string)\":{\"details\":\"Only the owner can assign new employees\",\"params\":{\"newEmployee\":\"Address of the employee to be assigned\",\"role\":\"Role to assign to the employee\"}},\"changeOwner(address)\":{\"details\":\"Only the current owner can call this function\",\"params\":{\"newOwner\":\"Address of the new owner\"}},\"employeeCount()\":{\"returns\":{\"_0\":\"uint Total employee count\"}},\"hasRole(address,string)\":{\"params\":{\"account\":\"Address to check\",\"role\":\"Role to check for\"},\"returns\":{\"_0\":\"bool True if the account has the specified role\"}},\"removeEmployee(address,string)\":{\"details\":\"Only the owner can remove employee roles\",\"params\":{\"employee\":\"Address of the employee to remove the role from\",\"role\":\"Role to remove from the employee\"}}},\"title\":\"Employee Assignment Interface\",\"version\":1},\"userdoc\":{\"events\":{\"EmployeeAssigned(address,string)\":{\"notice\":\"Emitted when a new employee is assigned\"},\"EmployeeRemoved(address,string)\":{\"notice\":\"Emitted when an employee is removed\"},\"OwnerChanged(address,address)\":{\"notice\":\"Emitted when the contract owner is changed\"}},\"kind\":\"user\",\"methods\":{\"assignNewEmployee(address,string)\":{\"notice\":\"Assigns a new employee with a specific role\"},\"changeOwner(address)\":{\"notice\":\"Transfers ownership to a new address\"},\"employeeCount()\":{\"notice\":\"Get total number of employees currently assigned\"},\"hasRole(address,string)\":{\"notice\":\"Checks if an address has a specific role\"},\"removeEmployee(address,string)\":{\"notice\":\"Removes an employee's role\"}},\"notice\":\"Interface for role-based access control with owner and employee management\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Interface/Iemploye_assignment.sol\":\"IEmployeeAssignment\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Interface/Iemploye_assignment.sol\":{\"keccak256\":\"0xec0a39728b30db92ef38bb7504ee474ac143c61ba0c75160203837821050c058\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b324f600d6b02bc2b3d8d06263c16e34cf252561c55cff6bc8856c002d62a53e\",\"dweb:/ipfs/QmZdKzSsZSoNRrSoLtBQtqrUjJ9WpUJqiBTBfRJXWzoNTz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"EmployeeAssigned(address,string)": {
								"notice": "Emitted when a new employee is assigned"
							},
							"EmployeeRemoved(address,string)": {
								"notice": "Emitted when an employee is removed"
							},
							"OwnerChanged(address,address)": {
								"notice": "Emitted when the contract owner is changed"
							}
						},
						"kind": "user",
						"methods": {
							"assignNewEmployee(address,string)": {
								"notice": "Assigns a new employee with a specific role"
							},
							"changeOwner(address)": {
								"notice": "Transfers ownership to a new address"
							},
							"employeeCount()": {
								"notice": "Get total number of employees currently assigned"
							},
							"hasRole(address,string)": {
								"notice": "Checks if an address has a specific role"
							},
							"removeEmployee(address,string)": {
								"notice": "Removes an employee's role"
							}
						},
						"notice": "Interface for role-based access control with owner and employee management",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Interface/Iemploye_assignment.sol": {
				"ast": {
					"absolutePath": "Interface/Iemploye_assignment.sol",
					"exportedSymbols": {
						"IEmployeeAssignment": [
							62
						]
					},
					"id": 63,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IEmployeeAssignment",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "61:221:0",
								"text": "@title Employee Assignment Interface\n @notice Interface for role-based access control with owner and employee management\n @dev Provides function definitions for employee role management and ownership control"
							},
							"fullyImplemented": false,
							"id": 62,
							"linearizedBaseContracts": [
								62
							],
							"name": "IEmployeeAssignment",
							"nameLocation": "292:19:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "428:174:0",
										"text": "@notice Emitted when a new employee is assigned\n @param employee The address of the newly assigned employee\n @param role The role assigned to the employee"
									},
									"eventSelector": "088567665d11bb1ca04896b9d3c620779f90a9f00f12488f6050a74eb11c2be5",
									"id": 9,
									"name": "EmployeeAssigned",
									"nameLocation": "614:16:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "employee",
												"nameLocation": "647:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "631:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "631:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": false,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "664:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "657:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 6,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "657:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "630:39:0"
									},
									"src": "608:62:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 10,
										"nodeType": "StructuredDocumentation",
										"src": "682:155:0",
										"text": "@notice Emitted when an employee is removed\n @param employee The address of the removed employee\n @param role The role that was removed"
									},
									"eventSelector": "cf3bbb93629b62834974659efc838721fa2bd3b41cafd38b516ac86b661491e1",
									"id": 16,
									"name": "EmployeeRemoved",
									"nameLocation": "849:15:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"indexed": true,
												"mutability": "mutable",
												"name": "employee",
												"nameLocation": "881:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "865:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 11,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "865:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 14,
												"indexed": false,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "898:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "891:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 13,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "891:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "864:39:0"
									},
									"src": "843:61:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "916:167:0",
										"text": "@notice Emitted when the contract owner is changed\n @param oldOwner The address of the previous owner\n @param newOwner The address of the new owner"
									},
									"eventSelector": "b532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c",
									"id": 23,
									"name": "OwnerChanged",
									"nameLocation": "1095:12:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldOwner",
												"nameLocation": "1124:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "1108:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1150:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "1134:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 20,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1134:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1107:52:0"
									},
									"src": "1089:71:0"
								},
								{
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "1292:103:0",
										"text": "@notice Get total number of employees currently assigned\n @return uint Total employee count"
									},
									"functionSelector": "9047bf58",
									"id": 29,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "employeeCount",
									"nameLocation": "1410:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1423:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "1449:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1449:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1448:6:0"
									},
									"scope": 62,
									"src": "1401:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "1593:242:0",
										"text": " @notice Assigns a new employee with a specific role\n @dev Only the owner can assign new employees\n @param newEmployee Address of the employee to be assigned\n @param role Role to assign to the employee"
									},
									"functionSelector": "a5623ffc",
									"id": 37,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "assignNewEmployee",
									"nameLocation": "1850:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "newEmployee",
												"nameLocation": "1876:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "1868:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 31,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1868:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1905:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "1889:20:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 33,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1889:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1867:43:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1919:0:0"
									},
									"scope": 62,
									"src": "1841:79:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 38,
										"nodeType": "StructuredDocumentation",
										"src": "1932:234:0",
										"text": " @notice Removes an employee's role\n @dev Only the owner can remove employee roles\n @param employee Address of the employee to remove the role from\n @param role Role to remove from the employee"
									},
									"functionSelector": "559b9b4c",
									"id": 45,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeEmployee",
									"nameLocation": "2181:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "employee",
												"nameLocation": "2204:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "2196:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 39,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2196:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2230:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "2214:20:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 41,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2214:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2195:40:0"
									},
									"returnParameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2244:0:0"
									},
									"scope": 62,
									"src": "2172:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 46,
										"nodeType": "StructuredDocumentation",
										"src": "2257:211:0",
										"text": " @notice Checks if an address has a specific role\n @param account Address to check\n @param role Role to check for\n @return bool True if the account has the specified role"
									},
									"functionSelector": "217fe6c6",
									"id": 55,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2483:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2499:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "2491:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 47,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2491:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2524:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "2508:20:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 49,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2508:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2490:39:0"
									},
									"returnParameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "2553:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 52,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2553:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2552:6:0"
									},
									"scope": 62,
									"src": "2474:85:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 56,
										"nodeType": "StructuredDocumentation",
										"src": "2698:173:0",
										"text": " @notice Transfers ownership to a new address\n @dev Only the current owner can call this function\n @param newOwner Address of the new owner"
									},
									"functionSelector": "a6f9dae1",
									"id": 61,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "changeOwner",
									"nameLocation": "2886:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2906:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2898:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 57,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2898:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2897:18:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2924:0:0"
									},
									"scope": 62,
									"src": "2877:48:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 63,
							"src": "282:2646:0",
							"usedErrors": [],
							"usedEvents": [
								9,
								16,
								23
							]
						}
					],
					"src": "33:2895:0"
				},
				"id": 0
			}
		}
	}
}