{
	"id": "ea91cb99b77773336696d7d972b7623b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"Owner/employe_assignment.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"../Interface/Iemploye_assignment.sol\";\r\n\r\n/// @title Employee Assignment and Management Contract\r\n/// @notice Provides role-based access control with an owner and assigned employees\r\n/// @dev Abstract contract that can be inherited by other contracts to enforce employee-only actions\r\nabstract contract EmployeeAssignment {\r\n    \r\n    // ================================\r\n    // State Variables\r\n    // ================================\r\n    \r\n    /// @notice Address of the contract owner\r\n    address internal owner = msg.sender;\r\n    \r\n    /// @notice Total number of employees currently assigned\r\n    uint public employeeCount;\r\n    \r\n    /// @notice Mapping to track employee roles (address => role => hasRole)\r\n    mapping(address => mapping(string => bool)) internal employees;\r\n    \r\n    // ================================\r\n    // Events\r\n    // ================================\r\n    \r\n    /// @notice Emitted when a new employee is assigned\r\n    /// @param employee The address of the newly assigned employee\r\n    /// @param role The role assigned to the employee\r\n    event EmployeeAssigned(address indexed employee, string role);\r\n    \r\n    /// @notice Emitted when an employee is removed\r\n    /// @param employee The address of the removed employee\r\n    /// @param role The role that was removed\r\n    event EmployeeRemoved(address indexed employee, string role);\r\n    \r\n    /// @notice Emitted when the contract owner is changed\r\n    /// @param oldOwner The address of the previous owner\r\n    /// @param newOwner The address of the new owner\r\n    event OwnerChanged(address indexed oldOwner, address indexed newOwner);\r\n    \r\n    // ================================\r\n    // Modifiers\r\n    // ================================\r\n    \r\n    /// @notice Ensures that only the contract owner can call the function\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"EmployeeAssignment: caller is not the owner\");\r\n        _;\r\n    }\r\n    \r\n    /// @notice Ensures that the caller is not the owner\r\n    modifier notOwner() {\r\n        require(msg.sender != owner, \"EmployeeAssignment: caller is the owner\");\r\n        _;\r\n    }\r\n    \r\n    /// @notice Ensures that only employees with Admin role can call the function\r\n    modifier onlyEmployes() {\r\n        require(employees[msg.sender][\"Admin\"], \"EmployeeAssignment: caller is not an admin\");\r\n        _;\r\n    }\r\n    \r\n    /// @notice Ensures that the caller is not an employee with Admin role\r\n    modifier notEmployes() {\r\n        require(!employees[msg.sender][\"Admin\"], \"EmployeeAssignment: caller is an admin\");\r\n        _;\r\n    }\r\n    \r\n    // ================================\r\n    // Internal Functions\r\n    // ================================\r\n    \r\n    /**\r\n     * @notice Validates that an address is not the zero address\r\n     * @dev Internal helper function for address validation\r\n     * @param x Address to validate\r\n     */\r\n    function zero_Address(address x) internal pure {\r\n        require(x != address(0), \"EmployeeAssignment: zero address not allowed\");\r\n    }\r\n    \r\n    // ================================\r\n    // External Functions\r\n    // ================================\r\n    \r\n    /**\r\n     * @notice Assigns a new employee with a specific role\r\n     * @dev Only the owner can assign new employees. Validates role and address.\r\n     * @param newEmployee Address of the employee to be assigned\r\n     * @param role Role to assign to the employee\r\n     */\r\n    function assignNewEmployee(address newEmployee, string calldata role) external onlyOwner {\r\n        // Validate that the role is \"Employe\"\r\n        require(keccak256(bytes(role)) == keccak256(bytes(\"Employe\")), \"EmployeeAssignment: invalid role\");\r\n        \r\n        // Validate that employee address is not zero\r\n        require(newEmployee != address(0), \"EmployeeAssignment: employee cannot be zero address\");\r\n        \r\n        // Validate that employee doesn't already have this role\r\n        require(!employees[newEmployee][role], \"EmployeeAssignment: employee already has this role\");\r\n        \r\n        // Assign the role to the employee\r\n        employees[newEmployee][role] = true;\r\n        employeeCount++;\r\n        \r\n        // Emit assignment event\r\n        emit EmployeeAssigned(newEmployee, role);\r\n    }\r\n    \r\n    /**\r\n     * @notice Removes an employee's role\r\n     * @dev Only the owner can remove employee roles. Validates role and current assignment.\r\n     * @param employee Address of the employee to remove the role from\r\n     * @param role Role to remove from the employee\r\n     */\r\n    function removeEmployee(address employee, string calldata role) external onlyOwner {\r\n        // Validate that the role is \"Employe\"\r\n        require(keccak256(bytes(role)) == keccak256(bytes(\"Employe\")), \"EmployeeAssignment: invalid role\");\r\n        \r\n        // Validate that employee currently has this role\r\n        require(employees[employee][role], \"EmployeeAssignment: employee does not have this role\");\r\n        \r\n        // Remove the role from the employee\r\n        employees[employee][role] = false;\r\n        employeeCount--;\r\n        \r\n        // Emit removal event\r\n        emit EmployeeRemoved(employee, role);\r\n    }\r\n    \r\n    /**\r\n     * @notice Checks if an address has a specific role\r\n     * @param account Address to check\r\n     * @param role Role to check for\r\n     * @return bool True if the account has the specified role\r\n     */\r\n    function hasRole(address account, string calldata role) external view returns (bool) {\r\n        return employees[account][role];\r\n    }\r\n    \r\n    /**\r\n     * @notice Transfers ownership to a new address\r\n     * @dev Only the current owner can call this function. Validates the new owner address.\r\n     * @param newOwner Address of the new owner\r\n     */\r\n    function changeOwner(address newOwner) external onlyOwner {\r\n        // Validate that new owner address is not zero\r\n        zero_Address(newOwner);\r\n        \r\n        // Validate that current sender address is not zero\r\n        zero_Address(msg.sender);\r\n        \r\n        // Store current owner for event emission\r\n        address oldOwner = owner;\r\n        \r\n        // Transfer ownership\r\n        owner = newOwner;\r\n        \r\n        // Emit ownership change event\r\n        emit OwnerChanged(oldOwner, newOwner);\r\n    }\r\n}"
			},
			"Interface/Iemploye_assignment.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\n/// @title Employee Assignment Interface\r\n/// @notice Interface for role-based access control with owner and employee management\r\n/// @dev Provides function definitions for employee role management and ownership control\r\ninterface IEmployeeAssignment {\r\n    \r\n    // ================================\r\n    // Events\r\n    // ================================\r\n    \r\n    /// @notice Emitted when a new employee is assigned\r\n    /// @param employee The address of the newly assigned employee\r\n    /// @param role The role assigned to the employee\r\n    event EmployeeAssigned(address indexed employee, string role);\r\n    \r\n    /// @notice Emitted when an employee is removed\r\n    /// @param employee The address of the removed employee\r\n    /// @param role The role that was removed\r\n    event EmployeeRemoved(address indexed employee, string role);\r\n    \r\n    /// @notice Emitted when the contract owner is changed\r\n    /// @param oldOwner The address of the previous owner\r\n    /// @param newOwner The address of the new owner\r\n    event OwnerChanged(address indexed oldOwner, address indexed newOwner);\r\n    \r\n    // ================================\r\n    // State Variables Getters\r\n    // ================================\r\n    \r\n    /// @notice Get total number of employees currently assigned\r\n    /// @return uint Total employee count\r\n    function employeeCount() external view returns (uint);\r\n    \r\n    // ================================\r\n    // Employee Management Functions\r\n    // ================================\r\n    \r\n    /**\r\n     * @notice Assigns a new employee with a specific role\r\n     * @dev Only the owner can assign new employees\r\n     * @param newEmployee Address of the employee to be assigned\r\n     * @param role Role to assign to the employee\r\n     */\r\n    function assignNewEmployee(address newEmployee, string calldata role) external;\r\n    \r\n    /**\r\n     * @notice Removes an employee's role\r\n     * @dev Only the owner can remove employee roles\r\n     * @param employee Address of the employee to remove the role from\r\n     * @param role Role to remove from the employee\r\n     */\r\n    function removeEmployee(address employee, string calldata role) external;\r\n    \r\n    /**\r\n     * @notice Checks if an address has a specific role\r\n     * @param account Address to check\r\n     * @param role Role to check for\r\n     * @return bool True if the account has the specified role\r\n     */\r\n    function hasRole(address account, string calldata role) external view returns (bool);\r\n    \r\n    // ================================\r\n    // Ownership Management Functions\r\n    // ================================\r\n    \r\n    /**\r\n     * @notice Transfers ownership to a new address\r\n     * @dev Only the current owner can call this function\r\n     * @param newOwner Address of the new owner\r\n     */\r\n    function changeOwner(address newOwner) external;\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"Interface/Iemploye_assignment.sol": {
				"IEmployeeAssignment": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "employee",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "role",
									"type": "string"
								}
							],
							"name": "EmployeeAssigned",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "employee",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "role",
									"type": "string"
								}
							],
							"name": "EmployeeRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnerChanged",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newEmployee",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "role",
									"type": "string"
								}
							],
							"name": "assignNewEmployee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "changeOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "employeeCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "role",
									"type": "string"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "employee",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "role",
									"type": "string"
								}
							],
							"name": "removeEmployee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Provides function definitions for employee role management and ownership control",
						"events": {
							"EmployeeAssigned(address,string)": {
								"params": {
									"employee": "The address of the newly assigned employee",
									"role": "The role assigned to the employee"
								}
							},
							"EmployeeRemoved(address,string)": {
								"params": {
									"employee": "The address of the removed employee",
									"role": "The role that was removed"
								}
							},
							"OwnerChanged(address,address)": {
								"params": {
									"newOwner": "The address of the new owner",
									"oldOwner": "The address of the previous owner"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"assignNewEmployee(address,string)": {
								"details": "Only the owner can assign new employees",
								"params": {
									"newEmployee": "Address of the employee to be assigned",
									"role": "Role to assign to the employee"
								}
							},
							"changeOwner(address)": {
								"details": "Only the current owner can call this function",
								"params": {
									"newOwner": "Address of the new owner"
								}
							},
							"employeeCount()": {
								"returns": {
									"_0": "uint Total employee count"
								}
							},
							"hasRole(address,string)": {
								"params": {
									"account": "Address to check",
									"role": "Role to check for"
								},
								"returns": {
									"_0": "bool True if the account has the specified role"
								}
							},
							"removeEmployee(address,string)": {
								"details": "Only the owner can remove employee roles",
								"params": {
									"employee": "Address of the employee to remove the role from",
									"role": "Role to remove from the employee"
								}
							}
						},
						"title": "Employee Assignment Interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"assignNewEmployee(address,string)": "a5623ffc",
							"changeOwner(address)": "a6f9dae1",
							"employeeCount()": "9047bf58",
							"hasRole(address,string)": "217fe6c6",
							"removeEmployee(address,string)": "559b9b4c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"employee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"role\",\"type\":\"string\"}],\"name\":\"EmployeeAssigned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"employee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"role\",\"type\":\"string\"}],\"name\":\"EmployeeRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newEmployee\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"role\",\"type\":\"string\"}],\"name\":\"assignNewEmployee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"employeeCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"role\",\"type\":\"string\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"employee\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"role\",\"type\":\"string\"}],\"name\":\"removeEmployee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides function definitions for employee role management and ownership control\",\"events\":{\"EmployeeAssigned(address,string)\":{\"params\":{\"employee\":\"The address of the newly assigned employee\",\"role\":\"The role assigned to the employee\"}},\"EmployeeRemoved(address,string)\":{\"params\":{\"employee\":\"The address of the removed employee\",\"role\":\"The role that was removed\"}},\"OwnerChanged(address,address)\":{\"params\":{\"newOwner\":\"The address of the new owner\",\"oldOwner\":\"The address of the previous owner\"}}},\"kind\":\"dev\",\"methods\":{\"assignNewEmployee(address,string)\":{\"details\":\"Only the owner can assign new employees\",\"params\":{\"newEmployee\":\"Address of the employee to be assigned\",\"role\":\"Role to assign to the employee\"}},\"changeOwner(address)\":{\"details\":\"Only the current owner can call this function\",\"params\":{\"newOwner\":\"Address of the new owner\"}},\"employeeCount()\":{\"returns\":{\"_0\":\"uint Total employee count\"}},\"hasRole(address,string)\":{\"params\":{\"account\":\"Address to check\",\"role\":\"Role to check for\"},\"returns\":{\"_0\":\"bool True if the account has the specified role\"}},\"removeEmployee(address,string)\":{\"details\":\"Only the owner can remove employee roles\",\"params\":{\"employee\":\"Address of the employee to remove the role from\",\"role\":\"Role to remove from the employee\"}}},\"title\":\"Employee Assignment Interface\",\"version\":1},\"userdoc\":{\"events\":{\"EmployeeAssigned(address,string)\":{\"notice\":\"Emitted when a new employee is assigned\"},\"EmployeeRemoved(address,string)\":{\"notice\":\"Emitted when an employee is removed\"},\"OwnerChanged(address,address)\":{\"notice\":\"Emitted when the contract owner is changed\"}},\"kind\":\"user\",\"methods\":{\"assignNewEmployee(address,string)\":{\"notice\":\"Assigns a new employee with a specific role\"},\"changeOwner(address)\":{\"notice\":\"Transfers ownership to a new address\"},\"employeeCount()\":{\"notice\":\"Get total number of employees currently assigned\"},\"hasRole(address,string)\":{\"notice\":\"Checks if an address has a specific role\"},\"removeEmployee(address,string)\":{\"notice\":\"Removes an employee's role\"}},\"notice\":\"Interface for role-based access control with owner and employee management\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Interface/Iemploye_assignment.sol\":\"IEmployeeAssignment\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Interface/Iemploye_assignment.sol\":{\"keccak256\":\"0xec0a39728b30db92ef38bb7504ee474ac143c61ba0c75160203837821050c058\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b324f600d6b02bc2b3d8d06263c16e34cf252561c55cff6bc8856c002d62a53e\",\"dweb:/ipfs/QmZdKzSsZSoNRrSoLtBQtqrUjJ9WpUJqiBTBfRJXWzoNTz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"EmployeeAssigned(address,string)": {
								"notice": "Emitted when a new employee is assigned"
							},
							"EmployeeRemoved(address,string)": {
								"notice": "Emitted when an employee is removed"
							},
							"OwnerChanged(address,address)": {
								"notice": "Emitted when the contract owner is changed"
							}
						},
						"kind": "user",
						"methods": {
							"assignNewEmployee(address,string)": {
								"notice": "Assigns a new employee with a specific role"
							},
							"changeOwner(address)": {
								"notice": "Transfers ownership to a new address"
							},
							"employeeCount()": {
								"notice": "Get total number of employees currently assigned"
							},
							"hasRole(address,string)": {
								"notice": "Checks if an address has a specific role"
							},
							"removeEmployee(address,string)": {
								"notice": "Removes an employee's role"
							}
						},
						"notice": "Interface for role-based access control with owner and employee management",
						"version": 1
					}
				}
			},
			"Owner/employe_assignment.sol": {
				"EmployeeAssignment": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "employee",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "role",
									"type": "string"
								}
							],
							"name": "EmployeeAssigned",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "employee",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "role",
									"type": "string"
								}
							],
							"name": "EmployeeRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnerChanged",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newEmployee",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "role",
									"type": "string"
								}
							],
							"name": "assignNewEmployee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "changeOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "employeeCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "role",
									"type": "string"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "employee",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "role",
									"type": "string"
								}
							],
							"name": "removeEmployee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Abstract contract that can be inherited by other contracts to enforce employee-only actions",
						"events": {
							"EmployeeAssigned(address,string)": {
								"params": {
									"employee": "The address of the newly assigned employee",
									"role": "The role assigned to the employee"
								}
							},
							"EmployeeRemoved(address,string)": {
								"params": {
									"employee": "The address of the removed employee",
									"role": "The role that was removed"
								}
							},
							"OwnerChanged(address,address)": {
								"params": {
									"newOwner": "The address of the new owner",
									"oldOwner": "The address of the previous owner"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"assignNewEmployee(address,string)": {
								"details": "Only the owner can assign new employees. Validates role and address.",
								"params": {
									"newEmployee": "Address of the employee to be assigned",
									"role": "Role to assign to the employee"
								}
							},
							"changeOwner(address)": {
								"details": "Only the current owner can call this function. Validates the new owner address.",
								"params": {
									"newOwner": "Address of the new owner"
								}
							},
							"hasRole(address,string)": {
								"params": {
									"account": "Address to check",
									"role": "Role to check for"
								},
								"returns": {
									"_0": "bool True if the account has the specified role"
								}
							},
							"removeEmployee(address,string)": {
								"details": "Only the owner can remove employee roles. Validates role and current assignment.",
								"params": {
									"employee": "Address of the employee to remove the role from",
									"role": "Role to remove from the employee"
								}
							}
						},
						"title": "Employee Assignment and Management Contract",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"assignNewEmployee(address,string)": "a5623ffc",
							"changeOwner(address)": "a6f9dae1",
							"employeeCount()": "9047bf58",
							"hasRole(address,string)": "217fe6c6",
							"removeEmployee(address,string)": "559b9b4c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"employee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"role\",\"type\":\"string\"}],\"name\":\"EmployeeAssigned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"employee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"role\",\"type\":\"string\"}],\"name\":\"EmployeeRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newEmployee\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"role\",\"type\":\"string\"}],\"name\":\"assignNewEmployee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"employeeCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"role\",\"type\":\"string\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"employee\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"role\",\"type\":\"string\"}],\"name\":\"removeEmployee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Abstract contract that can be inherited by other contracts to enforce employee-only actions\",\"events\":{\"EmployeeAssigned(address,string)\":{\"params\":{\"employee\":\"The address of the newly assigned employee\",\"role\":\"The role assigned to the employee\"}},\"EmployeeRemoved(address,string)\":{\"params\":{\"employee\":\"The address of the removed employee\",\"role\":\"The role that was removed\"}},\"OwnerChanged(address,address)\":{\"params\":{\"newOwner\":\"The address of the new owner\",\"oldOwner\":\"The address of the previous owner\"}}},\"kind\":\"dev\",\"methods\":{\"assignNewEmployee(address,string)\":{\"details\":\"Only the owner can assign new employees. Validates role and address.\",\"params\":{\"newEmployee\":\"Address of the employee to be assigned\",\"role\":\"Role to assign to the employee\"}},\"changeOwner(address)\":{\"details\":\"Only the current owner can call this function. Validates the new owner address.\",\"params\":{\"newOwner\":\"Address of the new owner\"}},\"hasRole(address,string)\":{\"params\":{\"account\":\"Address to check\",\"role\":\"Role to check for\"},\"returns\":{\"_0\":\"bool True if the account has the specified role\"}},\"removeEmployee(address,string)\":{\"details\":\"Only the owner can remove employee roles. Validates role and current assignment.\",\"params\":{\"employee\":\"Address of the employee to remove the role from\",\"role\":\"Role to remove from the employee\"}}},\"title\":\"Employee Assignment and Management Contract\",\"version\":1},\"userdoc\":{\"events\":{\"EmployeeAssigned(address,string)\":{\"notice\":\"Emitted when a new employee is assigned\"},\"EmployeeRemoved(address,string)\":{\"notice\":\"Emitted when an employee is removed\"},\"OwnerChanged(address,address)\":{\"notice\":\"Emitted when the contract owner is changed\"}},\"kind\":\"user\",\"methods\":{\"assignNewEmployee(address,string)\":{\"notice\":\"Assigns a new employee with a specific role\"},\"changeOwner(address)\":{\"notice\":\"Transfers ownership to a new address\"},\"employeeCount()\":{\"notice\":\"Total number of employees currently assigned\"},\"hasRole(address,string)\":{\"notice\":\"Checks if an address has a specific role\"},\"removeEmployee(address,string)\":{\"notice\":\"Removes an employee's role\"}},\"notice\":\"Provides role-based access control with an owner and assigned employees\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Owner/employe_assignment.sol\":\"EmployeeAssignment\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Interface/Iemploye_assignment.sol\":{\"keccak256\":\"0xec0a39728b30db92ef38bb7504ee474ac143c61ba0c75160203837821050c058\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b324f600d6b02bc2b3d8d06263c16e34cf252561c55cff6bc8856c002d62a53e\",\"dweb:/ipfs/QmZdKzSsZSoNRrSoLtBQtqrUjJ9WpUJqiBTBfRJXWzoNTz\"]},\"Owner/employe_assignment.sol\":{\"keccak256\":\"0x3647448ddbbb3cfdbfe1801a500a8fcdc9a27f75bae60b5981e55c1c5adcb3d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e2f58cf1a31cc754d005bc6e466956577914792cbd6b6ef87eaab9e693807b06\",\"dweb:/ipfs/QmSVwvPyLvadiZti3t9pjAUurU3CJvSuL6i2LDM32xFwaW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 71,
								"contract": "Owner/employe_assignment.sol:EmployeeAssignment",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 74,
								"contract": "Owner/employe_assignment.sol:EmployeeAssignment",
								"label": "employeeCount",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 81,
								"contract": "Owner/employe_assignment.sol:EmployeeAssignment",
								"label": "employees",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(string => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_string_memory_ptr,t_bool)"
							},
							"t_mapping(t_string_memory_ptr,t_bool)": {
								"encoding": "mapping",
								"key": "t_string_memory_ptr",
								"label": "mapping(string => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_string_memory_ptr": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"EmployeeAssigned(address,string)": {
								"notice": "Emitted when a new employee is assigned"
							},
							"EmployeeRemoved(address,string)": {
								"notice": "Emitted when an employee is removed"
							},
							"OwnerChanged(address,address)": {
								"notice": "Emitted when the contract owner is changed"
							}
						},
						"kind": "user",
						"methods": {
							"assignNewEmployee(address,string)": {
								"notice": "Assigns a new employee with a specific role"
							},
							"changeOwner(address)": {
								"notice": "Transfers ownership to a new address"
							},
							"employeeCount()": {
								"notice": "Total number of employees currently assigned"
							},
							"hasRole(address,string)": {
								"notice": "Checks if an address has a specific role"
							},
							"removeEmployee(address,string)": {
								"notice": "Removes an employee's role"
							}
						},
						"notice": "Provides role-based access control with an owner and assigned employees",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Interface/Iemploye_assignment.sol": {
				"ast": {
					"absolutePath": "Interface/Iemploye_assignment.sol",
					"exportedSymbols": {
						"IEmployeeAssignment": [
							62
						]
					},
					"id": 63,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IEmployeeAssignment",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "61:221:0",
								"text": "@title Employee Assignment Interface\n @notice Interface for role-based access control with owner and employee management\n @dev Provides function definitions for employee role management and ownership control"
							},
							"fullyImplemented": false,
							"id": 62,
							"linearizedBaseContracts": [
								62
							],
							"name": "IEmployeeAssignment",
							"nameLocation": "292:19:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "428:174:0",
										"text": "@notice Emitted when a new employee is assigned\n @param employee The address of the newly assigned employee\n @param role The role assigned to the employee"
									},
									"eventSelector": "088567665d11bb1ca04896b9d3c620779f90a9f00f12488f6050a74eb11c2be5",
									"id": 9,
									"name": "EmployeeAssigned",
									"nameLocation": "614:16:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "employee",
												"nameLocation": "647:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "631:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "631:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": false,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "664:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "657:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 6,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "657:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "630:39:0"
									},
									"src": "608:62:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 10,
										"nodeType": "StructuredDocumentation",
										"src": "682:155:0",
										"text": "@notice Emitted when an employee is removed\n @param employee The address of the removed employee\n @param role The role that was removed"
									},
									"eventSelector": "cf3bbb93629b62834974659efc838721fa2bd3b41cafd38b516ac86b661491e1",
									"id": 16,
									"name": "EmployeeRemoved",
									"nameLocation": "849:15:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"indexed": true,
												"mutability": "mutable",
												"name": "employee",
												"nameLocation": "881:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "865:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 11,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "865:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 14,
												"indexed": false,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "898:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "891:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 13,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "891:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "864:39:0"
									},
									"src": "843:61:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "916:167:0",
										"text": "@notice Emitted when the contract owner is changed\n @param oldOwner The address of the previous owner\n @param newOwner The address of the new owner"
									},
									"eventSelector": "b532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c",
									"id": 23,
									"name": "OwnerChanged",
									"nameLocation": "1095:12:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldOwner",
												"nameLocation": "1124:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "1108:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1150:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "1134:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 20,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1134:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1107:52:0"
									},
									"src": "1089:71:0"
								},
								{
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "1292:103:0",
										"text": "@notice Get total number of employees currently assigned\n @return uint Total employee count"
									},
									"functionSelector": "9047bf58",
									"id": 29,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "employeeCount",
									"nameLocation": "1410:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1423:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "1449:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1449:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1448:6:0"
									},
									"scope": 62,
									"src": "1401:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "1593:242:0",
										"text": " @notice Assigns a new employee with a specific role\n @dev Only the owner can assign new employees\n @param newEmployee Address of the employee to be assigned\n @param role Role to assign to the employee"
									},
									"functionSelector": "a5623ffc",
									"id": 37,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "assignNewEmployee",
									"nameLocation": "1850:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "newEmployee",
												"nameLocation": "1876:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "1868:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 31,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1868:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1905:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "1889:20:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 33,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1889:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1867:43:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1919:0:0"
									},
									"scope": 62,
									"src": "1841:79:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 38,
										"nodeType": "StructuredDocumentation",
										"src": "1932:234:0",
										"text": " @notice Removes an employee's role\n @dev Only the owner can remove employee roles\n @param employee Address of the employee to remove the role from\n @param role Role to remove from the employee"
									},
									"functionSelector": "559b9b4c",
									"id": 45,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeEmployee",
									"nameLocation": "2181:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "employee",
												"nameLocation": "2204:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "2196:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 39,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2196:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2230:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "2214:20:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 41,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2214:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2195:40:0"
									},
									"returnParameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2244:0:0"
									},
									"scope": 62,
									"src": "2172:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 46,
										"nodeType": "StructuredDocumentation",
										"src": "2257:211:0",
										"text": " @notice Checks if an address has a specific role\n @param account Address to check\n @param role Role to check for\n @return bool True if the account has the specified role"
									},
									"functionSelector": "217fe6c6",
									"id": 55,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2483:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2499:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "2491:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 47,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2491:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2524:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "2508:20:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 49,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2508:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2490:39:0"
									},
									"returnParameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "2553:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 52,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2553:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2552:6:0"
									},
									"scope": 62,
									"src": "2474:85:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 56,
										"nodeType": "StructuredDocumentation",
										"src": "2698:173:0",
										"text": " @notice Transfers ownership to a new address\n @dev Only the current owner can call this function\n @param newOwner Address of the new owner"
									},
									"functionSelector": "a6f9dae1",
									"id": 61,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "changeOwner",
									"nameLocation": "2886:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2906:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2898:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 57,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2898:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2897:18:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2924:0:0"
									},
									"scope": 62,
									"src": "2877:48:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 63,
							"src": "282:2646:0",
							"usedErrors": [],
							"usedEvents": [
								9,
								16,
								23
							]
						}
					],
					"src": "33:2895:0"
				},
				"id": 0
			},
			"Owner/employe_assignment.sol": {
				"ast": {
					"absolutePath": "Owner/employe_assignment.sol",
					"exportedSymbols": {
						"EmployeeAssignment": [
							342
						],
						"IEmployeeAssignment": [
							62
						]
					},
					"id": 343,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 64,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:1"
						},
						{
							"absolutePath": "Interface/Iemploye_assignment.sol",
							"file": "../Interface/Iemploye_assignment.sol",
							"id": 65,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 343,
							"sourceUnit": 63,
							"src": "61:46:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "EmployeeAssignment",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 66,
								"nodeType": "StructuredDocumentation",
								"src": "111:243:1",
								"text": "@title Employee Assignment and Management Contract\n @notice Provides role-based access control with an owner and assigned employees\n @dev Abstract contract that can be inherited by other contracts to enforce employee-only actions"
							},
							"fullyImplemented": true,
							"id": 342,
							"linearizedBaseContracts": [
								342
							],
							"name": "EmployeeAssignment",
							"nameLocation": "372:18:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "516:41:1",
										"text": "@notice Address of the contract owner"
									},
									"id": 71,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "580:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 342,
									"src": "563:35:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 68,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "563:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"expression": {
											"id": 69,
											"name": "msg",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967281,
											"src": "588:3:1",
											"typeDescriptions": {
												"typeIdentifier": "t_magic_message",
												"typeString": "msg"
											}
										},
										"id": 70,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"memberLocation": "592:6:1",
										"memberName": "sender",
										"nodeType": "MemberAccess",
										"src": "588:10:1",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "611:56:1",
										"text": "@notice Total number of employees currently assigned"
									},
									"functionSelector": "9047bf58",
									"id": 74,
									"mutability": "mutable",
									"name": "employeeCount",
									"nameLocation": "685:13:1",
									"nodeType": "VariableDeclaration",
									"scope": 342,
									"src": "673:25:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 73,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "673:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "711:72:1",
										"text": "@notice Mapping to track employee roles (address => role => hasRole)"
									},
									"id": 81,
									"mutability": "mutable",
									"name": "employees",
									"nameLocation": "842:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 342,
									"src": "789:62:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(string => bool))"
									},
									"typeName": {
										"id": 80,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 76,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "797:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "789:43:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(string => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 79,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 77,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "816:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"nodeType": "Mapping",
											"src": "808:23:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
												"typeString": "mapping(string => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 78,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "826:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "967:174:1",
										"text": "@notice Emitted when a new employee is assigned\n @param employee The address of the newly assigned employee\n @param role The role assigned to the employee"
									},
									"eventSelector": "088567665d11bb1ca04896b9d3c620779f90a9f00f12488f6050a74eb11c2be5",
									"id": 88,
									"name": "EmployeeAssigned",
									"nameLocation": "1153:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"indexed": true,
												"mutability": "mutable",
												"name": "employee",
												"nameLocation": "1186:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "1170:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 83,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1170:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 86,
												"indexed": false,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1203:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "1196:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 85,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1196:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1169:39:1"
									},
									"src": "1147:62:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 89,
										"nodeType": "StructuredDocumentation",
										"src": "1221:155:1",
										"text": "@notice Emitted when an employee is removed\n @param employee The address of the removed employee\n @param role The role that was removed"
									},
									"eventSelector": "cf3bbb93629b62834974659efc838721fa2bd3b41cafd38b516ac86b661491e1",
									"id": 95,
									"name": "EmployeeRemoved",
									"nameLocation": "1388:15:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"indexed": true,
												"mutability": "mutable",
												"name": "employee",
												"nameLocation": "1420:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "1404:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1404:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"indexed": false,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1437:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "1430:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 92,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1430:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1403:39:1"
									},
									"src": "1382:61:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 96,
										"nodeType": "StructuredDocumentation",
										"src": "1455:167:1",
										"text": "@notice Emitted when the contract owner is changed\n @param oldOwner The address of the previous owner\n @param newOwner The address of the new owner"
									},
									"eventSelector": "b532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c",
									"id": 102,
									"name": "OwnerChanged",
									"nameLocation": "1634:12:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldOwner",
												"nameLocation": "1663:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "1647:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1647:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 100,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1689:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "1673:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 99,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1673:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1646:52:1"
									},
									"src": "1628:71:1"
								},
								{
									"body": {
										"id": 114,
										"nodeType": "Block",
										"src": "1914:106:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 109,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 106,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1933:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 107,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1937:6:1",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1933:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 108,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "1947:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1933:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "456d706c6f79656541737369676e6d656e743a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 110,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1954:45:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_be19c913aedcdbbb73b57c07a54f6509e976f3caab98f6dc15992d6cb31e18ad",
																"typeString": "literal_string \"EmployeeAssignment: caller is not the owner\""
															},
															"value": "EmployeeAssignment: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_be19c913aedcdbbb73b57c07a54f6509e976f3caab98f6dc15992d6cb31e18ad",
																"typeString": "literal_string \"EmployeeAssignment: caller is not the owner\""
															}
														],
														"id": 105,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1925:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1925:75:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 112,
												"nodeType": "ExpressionStatement",
												"src": "1925:75:1"
											},
											{
												"id": 113,
												"nodeType": "PlaceholderStatement",
												"src": "2011:1:1"
											}
										]
									},
									"documentation": {
										"id": 103,
										"nodeType": "StructuredDocumentation",
										"src": "1817:70:1",
										"text": "@notice Ensures that only the contract owner can call the function"
									},
									"id": 115,
									"name": "onlyOwner",
									"nameLocation": "1902:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1911:2:1"
									},
									"src": "1893:127:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "2110:102:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 119,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2129:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2133:6:1",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2129:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 121,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2143:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2129:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "456d706c6f79656541737369676e6d656e743a2063616c6c657220697320746865206f776e6572",
															"id": 123,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2150:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4302a9b5cc34ecb197a037f71075603ef8193a5d8a10281369d2e51fb64bfbd8",
																"typeString": "literal_string \"EmployeeAssignment: caller is the owner\""
															},
															"value": "EmployeeAssignment: caller is the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4302a9b5cc34ecb197a037f71075603ef8193a5d8a10281369d2e51fb64bfbd8",
																"typeString": "literal_string \"EmployeeAssignment: caller is the owner\""
															}
														],
														"id": 118,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2121:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2121:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 125,
												"nodeType": "ExpressionStatement",
												"src": "2121:71:1"
											},
											{
												"id": 126,
												"nodeType": "PlaceholderStatement",
												"src": "2203:1:1"
											}
										]
									},
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "2032:52:1",
										"text": "@notice Ensures that the caller is not the owner"
									},
									"id": 128,
									"name": "notOwner",
									"nameLocation": "2099:8:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2107:2:1"
									},
									"src": "2090:122:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 142,
										"nodeType": "Block",
										"src": "2331:116:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"baseExpression": {
																	"id": 132,
																	"name": "employees",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 81,
																	"src": "2350:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_bool_$_$",
																		"typeString": "mapping(address => mapping(string memory => bool))"
																	}
																},
																"id": 135,
																"indexExpression": {
																	"expression": {
																		"id": 133,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2360:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 134,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2364:6:1",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2360:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2350:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
																	"typeString": "mapping(string memory => bool)"
																}
															},
															"id": 137,
															"indexExpression": {
																"hexValue": "41646d696e",
																"id": 136,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2372:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_a729ef4e25027bc652fc8b5c4d1d902947361fa7c8e7b4905e877823f27331b3",
																	"typeString": "literal_string \"Admin\""
																},
																"value": "Admin"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2350:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "456d706c6f79656541737369676e6d656e743a2063616c6c6572206973206e6f7420616e2061646d696e",
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2382:44:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_57fda6a175f75ede4a8baf5c39fe56f07c28dcda9043c9d6e7667d5c8443bd33",
																"typeString": "literal_string \"EmployeeAssignment: caller is not an admin\""
															},
															"value": "EmployeeAssignment: caller is not an admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_57fda6a175f75ede4a8baf5c39fe56f07c28dcda9043c9d6e7667d5c8443bd33",
																"typeString": "literal_string \"EmployeeAssignment: caller is not an admin\""
															}
														],
														"id": 131,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2342:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2342:85:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "2342:85:1"
											},
											{
												"id": 141,
												"nodeType": "PlaceholderStatement",
												"src": "2438:1:1"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "2224:77:1",
										"text": "@notice Ensures that only employees with Admin role can call the function"
									},
									"id": 143,
									"name": "onlyEmployes",
									"nameLocation": "2316:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2328:2:1"
									},
									"src": "2307:140:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "2558:113:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2577:31:1",
															"subExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 147,
																		"name": "employees",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 81,
																		"src": "2578:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_bool_$_$",
																			"typeString": "mapping(address => mapping(string memory => bool))"
																		}
																	},
																	"id": 150,
																	"indexExpression": {
																		"expression": {
																			"id": 148,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2588:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 149,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2592:6:1",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2588:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2578:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
																		"typeString": "mapping(string memory => bool)"
																	}
																},
																"id": 152,
																"indexExpression": {
																	"hexValue": "41646d696e",
																	"id": 151,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2600:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_a729ef4e25027bc652fc8b5c4d1d902947361fa7c8e7b4905e877823f27331b3",
																		"typeString": "literal_string \"Admin\""
																	},
																	"value": "Admin"
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2578:30:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "456d706c6f79656541737369676e6d656e743a2063616c6c657220697320616e2061646d696e",
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2610:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7492fce5e006fcffaee9124c7f362d98c96b7dd94d911dc9cbbe9a14b9ab0ea4",
																"typeString": "literal_string \"EmployeeAssignment: caller is an admin\""
															},
															"value": "EmployeeAssignment: caller is an admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7492fce5e006fcffaee9124c7f362d98c96b7dd94d911dc9cbbe9a14b9ab0ea4",
																"typeString": "literal_string \"EmployeeAssignment: caller is an admin\""
															}
														],
														"id": 146,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2569:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2569:82:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 156,
												"nodeType": "ExpressionStatement",
												"src": "2569:82:1"
											},
											{
												"id": 157,
												"nodeType": "PlaceholderStatement",
												"src": "2662:1:1"
											}
										]
									},
									"documentation": {
										"id": 144,
										"nodeType": "StructuredDocumentation",
										"src": "2459:70:1",
										"text": "@notice Ensures that the caller is not an employee with Admin role"
									},
									"id": 159,
									"name": "notEmployes",
									"nameLocation": "2544:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2555:2:1"
									},
									"src": "2535:136:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 175,
										"nodeType": "Block",
										"src": "3027:91:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 166,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 162,
																"src": "3046:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 169,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3059:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3051:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 167,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3051:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 170,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3051:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3046:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "456d706c6f79656541737369676e6d656e743a207a65726f2061646472657373206e6f7420616c6c6f776564",
															"id": 172,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3063:46:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e1006398cc5245a4111dd76307aa991211f00d34cc0aab1564eced5b7f5c5c8b",
																"typeString": "literal_string \"EmployeeAssignment: zero address not allowed\""
															},
															"value": "EmployeeAssignment: zero address not allowed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e1006398cc5245a4111dd76307aa991211f00d34cc0aab1564eced5b7f5c5c8b",
																"typeString": "literal_string \"EmployeeAssignment: zero address not allowed\""
															}
														],
														"id": 165,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3038:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3038:72:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 174,
												"nodeType": "ExpressionStatement",
												"src": "3038:72:1"
											}
										]
									},
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "2798:176:1",
										"text": " @notice Validates that an address is not the zero address\n @dev Internal helper function for address validation\n @param x Address to validate"
									},
									"id": 176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "zero_Address",
									"nameLocation": "2989:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3010:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "3002:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3002:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3001:11:1"
									},
									"returnParameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3027:0:1"
									},
									"scope": 342,
									"src": "2980:138:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 239,
										"nodeType": "Block",
										"src": "3611:730:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 190,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 181,
																				"src": "3694:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_calldata_ptr",
																					"typeString": "string calldata"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_string_calldata_ptr",
																					"typeString": "string calldata"
																				}
																			],
																			"id": 189,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3688:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																				"typeString": "type(bytes storage pointer)"
																			},
																			"typeName": {
																				"id": 188,
																				"name": "bytes",
																				"nodeType": "ElementaryTypeName",
																				"src": "3688:5:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 191,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3688:11:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	],
																	"id": 187,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967288,
																	"src": "3678:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 192,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3678:22:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "456d706c6f7965",
																				"id": 196,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3720:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_1b5820bbdd6245f18ccc5f26264ee6c30ce28dc4f8aa115fd41c4aa07d75cb14",
																					"typeString": "literal_string \"Employe\""
																				},
																				"value": "Employe"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_1b5820bbdd6245f18ccc5f26264ee6c30ce28dc4f8aa115fd41c4aa07d75cb14",
																					"typeString": "literal_string \"Employe\""
																				}
																			],
																			"id": 195,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3714:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																				"typeString": "type(bytes storage pointer)"
																			},
																			"typeName": {
																				"id": 194,
																				"name": "bytes",
																				"nodeType": "ElementaryTypeName",
																				"src": "3714:5:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3714:16:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 193,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967288,
																	"src": "3704:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 198,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3704:27:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "3678:53:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "456d706c6f79656541737369676e6d656e743a20696e76616c696420726f6c65",
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3733:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_86182b94da1bee776bc5aecea0e0e720034d357b64941e4469837fe3b3503061",
																"typeString": "literal_string \"EmployeeAssignment: invalid role\""
															},
															"value": "EmployeeAssignment: invalid role"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_86182b94da1bee776bc5aecea0e0e720034d357b64941e4469837fe3b3503061",
																"typeString": "literal_string \"EmployeeAssignment: invalid role\""
															}
														],
														"id": 186,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3670:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3670:98:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 202,
												"nodeType": "ExpressionStatement",
												"src": "3670:98:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 204,
																"name": "newEmployee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 179,
																"src": "3852:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 207,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3875:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 206,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3867:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 205,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3867:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 208,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3867:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3852:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "456d706c6f79656541737369676e6d656e743a20656d706c6f7965652063616e6e6f74206265207a65726f2061646472657373",
															"id": 210,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3879:53:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_297a7e8d72219be430b891b5919353f797e8c178d6dd9d1175f05469d21b3625",
																"typeString": "literal_string \"EmployeeAssignment: employee cannot be zero address\""
															},
															"value": "EmployeeAssignment: employee cannot be zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_297a7e8d72219be430b891b5919353f797e8c178d6dd9d1175f05469d21b3625",
																"typeString": "literal_string \"EmployeeAssignment: employee cannot be zero address\""
															}
														],
														"id": 203,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3844:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3844:89:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 212,
												"nodeType": "ExpressionStatement",
												"src": "3844:89:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "4028:29:1",
															"subExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 214,
																		"name": "employees",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 81,
																		"src": "4029:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_bool_$_$",
																			"typeString": "mapping(address => mapping(string memory => bool))"
																		}
																	},
																	"id": 216,
																	"indexExpression": {
																		"id": 215,
																		"name": "newEmployee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 179,
																		"src": "4039:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4029:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
																		"typeString": "mapping(string memory => bool)"
																	}
																},
																"id": 218,
																"indexExpression": {
																	"id": 217,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 181,
																	"src": "4052:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_calldata_ptr",
																		"typeString": "string calldata"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4029:28:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "456d706c6f79656541737369676e6d656e743a20656d706c6f79656520616c726561647920686173207468697320726f6c65",
															"id": 220,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4059:52:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9d7f46a4efa9ba829c7bf9205387b88a70997e6243b2f3d0bcd5b43be87e81cd",
																"typeString": "literal_string \"EmployeeAssignment: employee already has this role\""
															},
															"value": "EmployeeAssignment: employee already has this role"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9d7f46a4efa9ba829c7bf9205387b88a70997e6243b2f3d0bcd5b43be87e81cd",
																"typeString": "literal_string \"EmployeeAssignment: employee already has this role\""
															}
														],
														"id": 213,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4020:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4020:92:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 222,
												"nodeType": "ExpressionStatement",
												"src": "4020:92:1"
											},
											{
												"expression": {
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 223,
																"name": "employees",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 81,
																"src": "4177:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(string memory => bool))"
																}
															},
															"id": 226,
															"indexExpression": {
																"id": 224,
																"name": "newEmployee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 179,
																"src": "4187:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4177:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
																"typeString": "mapping(string memory => bool)"
															}
														},
														"id": 227,
														"indexExpression": {
															"id": 225,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "4200:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4177:28:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 228,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4208:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4177:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 230,
												"nodeType": "ExpressionStatement",
												"src": "4177:35:1"
											},
											{
												"expression": {
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "4223:15:1",
													"subExpression": {
														"id": 231,
														"name": "employeeCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 74,
														"src": "4223:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 233,
												"nodeType": "ExpressionStatement",
												"src": "4223:15:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 235,
															"name": "newEmployee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "4315:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 236,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "4328:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														],
														"id": 234,
														"name": "EmployeeAssigned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 88,
														"src": "4298:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (address,string memory)"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4298:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 238,
												"nodeType": "EmitStatement",
												"src": "4293:40:1"
											}
										]
									},
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "3245:271:1",
										"text": " @notice Assigns a new employee with a specific role\n @dev Only the owner can assign new employees. Validates role and address.\n @param newEmployee Address of the employee to be assigned\n @param role Role to assign to the employee"
									},
									"functionSelector": "a5623ffc",
									"id": 240,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 184,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 183,
												"name": "onlyOwner",
												"nameLocations": [
													"3601:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 115,
												"src": "3601:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "3601:9:1"
										}
									],
									"name": "assignNewEmployee",
									"nameLocation": "3531:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "newEmployee",
												"nameLocation": "3557:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "3549:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3549:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3586:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "3570:20:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 180,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3570:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3548:43:1"
									},
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3611:0:1"
									},
									"scope": 342,
									"src": "3522:819:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 292,
										"nodeType": "Block",
										"src": "4716:549:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 254,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 245,
																				"src": "4799:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_calldata_ptr",
																					"typeString": "string calldata"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_string_calldata_ptr",
																					"typeString": "string calldata"
																				}
																			],
																			"id": 253,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4793:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																				"typeString": "type(bytes storage pointer)"
																			},
																			"typeName": {
																				"id": 252,
																				"name": "bytes",
																				"nodeType": "ElementaryTypeName",
																				"src": "4793:5:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 255,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4793:11:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	],
																	"id": 251,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967288,
																	"src": "4783:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4783:22:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "456d706c6f7965",
																				"id": 260,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4825:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_1b5820bbdd6245f18ccc5f26264ee6c30ce28dc4f8aa115fd41c4aa07d75cb14",
																					"typeString": "literal_string \"Employe\""
																				},
																				"value": "Employe"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_1b5820bbdd6245f18ccc5f26264ee6c30ce28dc4f8aa115fd41c4aa07d75cb14",
																					"typeString": "literal_string \"Employe\""
																				}
																			],
																			"id": 259,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4819:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																				"typeString": "type(bytes storage pointer)"
																			},
																			"typeName": {
																				"id": 258,
																				"name": "bytes",
																				"nodeType": "ElementaryTypeName",
																				"src": "4819:5:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 261,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4819:16:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 257,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967288,
																	"src": "4809:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 262,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4809:27:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "4783:53:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "456d706c6f79656541737369676e6d656e743a20696e76616c696420726f6c65",
															"id": 264,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4838:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_86182b94da1bee776bc5aecea0e0e720034d357b64941e4469837fe3b3503061",
																"typeString": "literal_string \"EmployeeAssignment: invalid role\""
															},
															"value": "EmployeeAssignment: invalid role"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_86182b94da1bee776bc5aecea0e0e720034d357b64941e4469837fe3b3503061",
																"typeString": "literal_string \"EmployeeAssignment: invalid role\""
															}
														],
														"id": 250,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4775:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4775:98:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 266,
												"nodeType": "ExpressionStatement",
												"src": "4775:98:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"baseExpression": {
																	"id": 268,
																	"name": "employees",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 81,
																	"src": "4961:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_bool_$_$",
																		"typeString": "mapping(address => mapping(string memory => bool))"
																	}
																},
																"id": 270,
																"indexExpression": {
																	"id": 269,
																	"name": "employee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 243,
																	"src": "4971:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4961:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
																	"typeString": "mapping(string memory => bool)"
																}
															},
															"id": 272,
															"indexExpression": {
																"id": 271,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 245,
																"src": "4981:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_calldata_ptr",
																	"typeString": "string calldata"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4961:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "456d706c6f79656541737369676e6d656e743a20656d706c6f79656520646f6573206e6f742068617665207468697320726f6c65",
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4988:54:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_871c7eb853fc7a9b82130607fb18a7c52a6e84c5c3334204183f74d75be26854",
																"typeString": "literal_string \"EmployeeAssignment: employee does not have this role\""
															},
															"value": "EmployeeAssignment: employee does not have this role"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_871c7eb853fc7a9b82130607fb18a7c52a6e84c5c3334204183f74d75be26854",
																"typeString": "literal_string \"EmployeeAssignment: employee does not have this role\""
															}
														],
														"id": 267,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4953:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4953:90:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 275,
												"nodeType": "ExpressionStatement",
												"src": "4953:90:1"
											},
											{
												"expression": {
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 276,
																"name": "employees",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 81,
																"src": "5110:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(string memory => bool))"
																}
															},
															"id": 279,
															"indexExpression": {
																"id": 277,
																"name": "employee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 243,
																"src": "5120:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5110:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
																"typeString": "mapping(string memory => bool)"
															}
														},
														"id": 280,
														"indexExpression": {
															"id": 278,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 245,
															"src": "5130:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5110:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 281,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5138:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "5110:33:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 283,
												"nodeType": "ExpressionStatement",
												"src": "5110:33:1"
											},
											{
												"expression": {
													"id": 285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "--",
													"prefix": false,
													"src": "5154:15:1",
													"subExpression": {
														"id": 284,
														"name": "employeeCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 74,
														"src": "5154:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 286,
												"nodeType": "ExpressionStatement",
												"src": "5154:15:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 288,
															"name": "employee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "5242:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 289,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 245,
															"src": "5252:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														],
														"id": 287,
														"name": "EmployeeRemoved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 95,
														"src": "5226:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (address,string memory)"
														}
													},
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5226:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 291,
												"nodeType": "EmitStatement",
												"src": "5221:36:1"
											}
										]
									},
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "4353:274:1",
										"text": " @notice Removes an employee's role\n @dev Only the owner can remove employee roles. Validates role and current assignment.\n @param employee Address of the employee to remove the role from\n @param role Role to remove from the employee"
									},
									"functionSelector": "559b9b4c",
									"id": 293,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 248,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 247,
												"name": "onlyOwner",
												"nameLocations": [
													"4706:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 115,
												"src": "4706:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "4706:9:1"
										}
									],
									"name": "removeEmployee",
									"nameLocation": "4642:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "employee",
												"nameLocation": "4665:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "4657:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4691:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "4675:20:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 244,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4675:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4656:40:1"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4716:0:1"
									},
									"scope": 342,
									"src": "4633:632:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "5579:50:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 303,
															"name": "employees",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "5597:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(string memory => bool))"
															}
														},
														"id": 305,
														"indexExpression": {
															"id": 304,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 296,
															"src": "5607:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5597:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
															"typeString": "mapping(string memory => bool)"
														}
													},
													"id": 307,
													"indexExpression": {
														"id": 306,
														"name": "role",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 298,
														"src": "5616:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_calldata_ptr",
															"typeString": "string calldata"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5597:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 302,
												"id": 308,
												"nodeType": "Return",
												"src": "5590:31:1"
											}
										]
									},
									"documentation": {
										"id": 294,
										"nodeType": "StructuredDocumentation",
										"src": "5277:211:1",
										"text": " @notice Checks if an address has a specific role\n @param account Address to check\n @param role Role to check for\n @return bool True if the account has the specified role"
									},
									"functionSelector": "217fe6c6",
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "5503:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "5511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5544:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "5528:20:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 297,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5528:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5510:39:1"
									},
									"returnParameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "5573:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 300,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5573:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5572:6:1"
									},
									"scope": 342,
									"src": "5494:135:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "5912:465:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 319,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "5992:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 318,
														"name": "zero_Address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "5979:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$returns$__$",
															"typeString": "function (address) pure"
														}
													},
													"id": 320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5979:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 321,
												"nodeType": "ExpressionStatement",
												"src": "5979:22:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 323,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6096:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6100:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6096:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 322,
														"name": "zero_Address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "6083:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$returns$__$",
															"typeString": "function (address) pure"
														}
													},
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6083:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 326,
												"nodeType": "ExpressionStatement",
												"src": "6083:24:1"
											},
											{
												"assignments": [
													328
												],
												"declarations": [
													{
														"constant": false,
														"id": 328,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "6187:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 340,
														"src": "6179:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 327,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6179:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 330,
												"initialValue": {
													"id": 329,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 71,
													"src": "6198:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6179:24:1"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 71,
														"src": "6255:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 313,
														"src": "6263:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6255:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "6255:16:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 336,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 328,
															"src": "6350:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 337,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "6360:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 335,
														"name": "OwnerChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 102,
														"src": "6337:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6337:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 339,
												"nodeType": "EmitStatement",
												"src": "6332:37:1"
											}
										]
									},
									"documentation": {
										"id": 311,
										"nodeType": "StructuredDocumentation",
										"src": "5641:207:1",
										"text": " @notice Transfers ownership to a new address\n @dev Only the current owner can call this function. Validates the new owner address.\n @param newOwner Address of the new owner"
									},
									"functionSelector": "a6f9dae1",
									"id": 341,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 316,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 315,
												"name": "onlyOwner",
												"nameLocations": [
													"5902:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 115,
												"src": "5902:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "5902:9:1"
										}
									],
									"name": "changeOwner",
									"nameLocation": "5863:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "5883:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5875:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5875:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5874:18:1"
									},
									"returnParameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5912:0:1"
									},
									"scope": 342,
									"src": "5854:523:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 343,
							"src": "354:6026:1",
							"usedErrors": [],
							"usedEvents": [
								88,
								95,
								102
							]
						}
					],
					"src": "33:6347:1"
				},
				"id": 1
			}
		}
	}
}