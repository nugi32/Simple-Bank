{
	"id": "a9b06f0e11c28ff401208f0fb1a1d0a5",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"Owner/employe_assignment.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"../Interface/Iemploye_assignment.sol\";\r\n\r\n/// @title Employee Assignment and Management Contract\r\n/// @notice Provides role-based access control with an owner and assigned employees\r\n/// @dev Abstract contract that can be inherited by other contracts to enforce employee-only actions\r\nabstract contract EmployeeAssignment {\r\n\r\n    // ================================\r\n    // State Variables\r\n    // ================================\r\n\r\n    /// @notice Address of the contract owner\r\n    address internal owner;\r\n\r\n    /// @notice Total number of employees currently assigned\r\n    uint public employeeCount;\r\n\r\n    /// @notice Mapping to track employee roles (address => role => hasRole)\r\n    mapping(address => mapping(string => bool)) internal employees;\r\n\r\n    // ================================\r\n    // Events\r\n    // ================================\r\n\r\n    /// @notice Emitted when a new employee is assigned\r\n    /// @param employee The address of the newly assigned employee\r\n    /// @param role The role assigned to the employee\r\n    event EmployeeAssigned(address indexed employee, string role);\r\n\r\n    /// @notice Emitted when an employee is removed\r\n    /// @param employee The address of the removed employee\r\n    /// @param role The role that was removed\r\n    event EmployeeRemoved(address indexed employee, string role);\r\n\r\n    // ================================\r\n    // Constructor\r\n    // ================================\r\n\r\n    /**\r\n     * @notice Initializes the contract and sets the deployer as the owner\r\n     */\r\n    constructor() {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    // ================================\r\n    // Modifiers\r\n    // ================================\r\n\r\n    /// @notice Ensures that only the contract owner can call the function\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"EmployeeAssignment: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    /// @notice Ensures that the caller is not the owner\r\n    modifier notOwner() {\r\n        require(msg.sender != owner, \"EmployeeAssignment: caller is the owner\");\r\n        _;\r\n    }\r\n\r\n    /// @notice Ensures the caller is not the zero address\r\n    function zero_Address(address x) internal pure {\r\n        require(x != address(0), \"EmployeeAssignment: zero address not allowed\");\r\n    }\r\n\r\n    /// @notice Ensures that only employees with Admin role can call the function\r\n    modifier onlyemployes () {\r\n        require(employees[msg.sender][\"Admin\"], \"EmployeeAssignment: caller is not an admin\");\r\n        _;\r\n    }\r\n\r\n    /// @notice Ensures that the caller is not an employee with Admin role\r\n    modifier notEmployes() {\r\n        require(!employees[msg.sender][\"Admin\"], \"EmployeeAssignment: caller is an admin\");\r\n        _;\r\n    }\r\n\r\n    // ================================\r\n    // External Functions\r\n    // ================================\r\n\r\n    /**\r\n     * @notice Assigns a new employee with a specific role\r\n     * @dev Only the owner can assign new employees\r\n     * @param newEmployee Address of the employee to be assigned\r\n     * @param role Role to assign to the employee\r\n     */\r\n    function assignNewEmployee(address newEmployee, string calldata role) external onlyOwner {\r\n        require(keccak256(bytes(role)) == keccak256(bytes(\"Employe\")), \"EmployeeAssignment: invalid role\");\r\n        require(newEmployee != address(0), \"EmployeeAssignment: employee cannot be zero address\");\r\n        require(!employees[newEmployee][role], \"EmployeeAssignment: employee already has this role\");\r\n        \r\n        employees[newEmployee][role] = true;\r\n        employeeCount++;\r\n        \r\n        emit EmployeeAssigned(newEmployee, role);\r\n    }\r\n\r\n    /**\r\n     * @notice Removes an employee's role\r\n     * @dev Only the owner can remove employee roles\r\n     * @param employee Address of the employee to remove the role from\r\n     * @param role Role to remove from the employee\r\n     */\r\n    function removeEmployee(address employee, string calldata role) external onlyOwner {\r\n        require(keccak256(bytes(role)) == keccak256(bytes(\"Employe\")), \"EmployeeAssignment: invalid role\");\r\n        require(employees[employee][role], \"EmployeeAssignment: employee does not have this role\");\r\n        \r\n        employees[employee][role] = false;\r\n        employeeCount--;\r\n        \r\n        emit EmployeeRemoved(employee, role);\r\n    }\r\n\r\n    /**\r\n     * @notice Checks if an address has a specific role\r\n     * @param account Address to check\r\n     * @param role Role to check for\r\n     * @return bool True if the account has the specified role\r\n     */\r\n    function hasRole(address account, string calldata role) external view returns (bool) {\r\n        return employees[account][role];\r\n    }\r\n}"
			},
			"Interface/Iemploye_assignment.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\n/// @title IManagementAssignment\r\n/// @notice Interface for Management Assignment contract\r\n/// @dev Declares events and functions without implementation\r\ninterface IManagementAssignment {\r\n    // ----------------------------- Events -----------------------------\r\n\r\n    /// @notice Emitted when a new employee is assigned\r\n    /// @param new_employes_assign The address of the newly assigned employee\r\n    event new_employes_assign(address indexed new_employes_assign);\r\n\r\n    /// @notice Emitted when an employee is removed\r\n    /// @param removedmanagement The address of the removed employee\r\n    event employe_Removed(address indexed removedmanagement);\r\n\r\n    // ----------------------------- Functions -----------------------------\r\n\r\n    /// @notice Assign a new employee (management member)\r\n    /// @param new_employes The address of the new employee\r\n    function assign_new_management(address new_employes) external;\r\n\r\n    /// @notice Remove an employee from the management list by ID\r\n    /// @param employeId The index of the employee to remove\r\n    function reAssign_management(uint employeId) external;\r\n\r\n    /// @notice Returns the full list of assigned employees\r\n    /// @return Array of employee addresses\r\n    function see_all_assigned_employes() external view returns (address[] memory);\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"Interface/Iemploye_assignment.sol": {
				"IManagementAssignment": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "removedmanagement",
									"type": "address"
								}
							],
							"name": "employe_Removed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "new_employes_assign",
									"type": "address"
								}
							],
							"name": "new_employes_assign",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "new_employes",
									"type": "address"
								}
							],
							"name": "assign_new_management",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "employeId",
									"type": "uint256"
								}
							],
							"name": "reAssign_management",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "see_all_assigned_employes",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Declares events and functions without implementation",
						"events": {
							"employe_Removed(address)": {
								"params": {
									"removedmanagement": "The address of the removed employee"
								}
							},
							"new_employes_assign(address)": {
								"params": {
									"new_employes_assign": "The address of the newly assigned employee"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"assign_new_management(address)": {
								"params": {
									"new_employes": "The address of the new employee"
								}
							},
							"reAssign_management(uint256)": {
								"params": {
									"employeId": "The index of the employee to remove"
								}
							},
							"see_all_assigned_employes()": {
								"returns": {
									"_0": "Array of employee addresses"
								}
							}
						},
						"title": "IManagementAssignment",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"assign_new_management(address)": "c805d4dc",
							"reAssign_management(uint256)": "c05e625f",
							"see_all_assigned_employes()": "d6ae880b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"removedmanagement\",\"type\":\"address\"}],\"name\":\"employe_Removed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"new_employes_assign\",\"type\":\"address\"}],\"name\":\"new_employes_assign\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"new_employes\",\"type\":\"address\"}],\"name\":\"assign_new_management\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"employeId\",\"type\":\"uint256\"}],\"name\":\"reAssign_management\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"see_all_assigned_employes\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Declares events and functions without implementation\",\"events\":{\"employe_Removed(address)\":{\"params\":{\"removedmanagement\":\"The address of the removed employee\"}},\"new_employes_assign(address)\":{\"params\":{\"new_employes_assign\":\"The address of the newly assigned employee\"}}},\"kind\":\"dev\",\"methods\":{\"assign_new_management(address)\":{\"params\":{\"new_employes\":\"The address of the new employee\"}},\"reAssign_management(uint256)\":{\"params\":{\"employeId\":\"The index of the employee to remove\"}},\"see_all_assigned_employes()\":{\"returns\":{\"_0\":\"Array of employee addresses\"}}},\"title\":\"IManagementAssignment\",\"version\":1},\"userdoc\":{\"events\":{\"employe_Removed(address)\":{\"notice\":\"Emitted when an employee is removed\"},\"new_employes_assign(address)\":{\"notice\":\"Emitted when a new employee is assigned\"}},\"kind\":\"user\",\"methods\":{\"assign_new_management(address)\":{\"notice\":\"Assign a new employee (management member)\"},\"reAssign_management(uint256)\":{\"notice\":\"Remove an employee from the management list by ID\"},\"see_all_assigned_employes()\":{\"notice\":\"Returns the full list of assigned employees\"}},\"notice\":\"Interface for Management Assignment contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Interface/Iemploye_assignment.sol\":\"IManagementAssignment\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Interface/Iemploye_assignment.sol\":{\"keccak256\":\"0xf193241286d526af195bdbdfe29778a33224c8bb5b1056101d85dd3326bef916\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e559023f4b159e62ec1422648392eee1687fd36a0041f731b0655106b7136db4\",\"dweb:/ipfs/QmZ1vgEaMB3tb5GFn5fe5pb9bgQoG1NpvNZ5TD3uX4aRmH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"employe_Removed(address)": {
								"notice": "Emitted when an employee is removed"
							},
							"new_employes_assign(address)": {
								"notice": "Emitted when a new employee is assigned"
							}
						},
						"kind": "user",
						"methods": {
							"assign_new_management(address)": {
								"notice": "Assign a new employee (management member)"
							},
							"reAssign_management(uint256)": {
								"notice": "Remove an employee from the management list by ID"
							},
							"see_all_assigned_employes()": {
								"notice": "Returns the full list of assigned employees"
							}
						},
						"notice": "Interface for Management Assignment contract",
						"version": 1
					}
				}
			},
			"Owner/employe_assignment.sol": {
				"EmployeeAssignment": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "employee",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "role",
									"type": "string"
								}
							],
							"name": "EmployeeAssigned",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "employee",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "role",
									"type": "string"
								}
							],
							"name": "EmployeeRemoved",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newEmployee",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "role",
									"type": "string"
								}
							],
							"name": "assignNewEmployee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "employeeCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "role",
									"type": "string"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "employee",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "role",
									"type": "string"
								}
							],
							"name": "removeEmployee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Abstract contract that can be inherited by other contracts to enforce employee-only actions",
						"events": {
							"EmployeeAssigned(address,string)": {
								"params": {
									"employee": "The address of the newly assigned employee",
									"role": "The role assigned to the employee"
								}
							},
							"EmployeeRemoved(address,string)": {
								"params": {
									"employee": "The address of the removed employee",
									"role": "The role that was removed"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"assignNewEmployee(address,string)": {
								"details": "Only the owner can assign new employees",
								"params": {
									"newEmployee": "Address of the employee to be assigned",
									"role": "Role to assign to the employee"
								}
							},
							"hasRole(address,string)": {
								"params": {
									"account": "Address to check",
									"role": "Role to check for"
								},
								"returns": {
									"_0": "bool True if the account has the specified role"
								}
							},
							"removeEmployee(address,string)": {
								"details": "Only the owner can remove employee roles",
								"params": {
									"employee": "Address of the employee to remove the role from",
									"role": "Role to remove from the employee"
								}
							}
						},
						"title": "Employee Assignment and Management Contract",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"assignNewEmployee(address,string)": "a5623ffc",
							"employeeCount()": "9047bf58",
							"hasRole(address,string)": "217fe6c6",
							"removeEmployee(address,string)": "559b9b4c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"employee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"role\",\"type\":\"string\"}],\"name\":\"EmployeeAssigned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"employee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"role\",\"type\":\"string\"}],\"name\":\"EmployeeRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newEmployee\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"role\",\"type\":\"string\"}],\"name\":\"assignNewEmployee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"employeeCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"role\",\"type\":\"string\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"employee\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"role\",\"type\":\"string\"}],\"name\":\"removeEmployee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Abstract contract that can be inherited by other contracts to enforce employee-only actions\",\"events\":{\"EmployeeAssigned(address,string)\":{\"params\":{\"employee\":\"The address of the newly assigned employee\",\"role\":\"The role assigned to the employee\"}},\"EmployeeRemoved(address,string)\":{\"params\":{\"employee\":\"The address of the removed employee\",\"role\":\"The role that was removed\"}}},\"kind\":\"dev\",\"methods\":{\"assignNewEmployee(address,string)\":{\"details\":\"Only the owner can assign new employees\",\"params\":{\"newEmployee\":\"Address of the employee to be assigned\",\"role\":\"Role to assign to the employee\"}},\"hasRole(address,string)\":{\"params\":{\"account\":\"Address to check\",\"role\":\"Role to check for\"},\"returns\":{\"_0\":\"bool True if the account has the specified role\"}},\"removeEmployee(address,string)\":{\"details\":\"Only the owner can remove employee roles\",\"params\":{\"employee\":\"Address of the employee to remove the role from\",\"role\":\"Role to remove from the employee\"}}},\"title\":\"Employee Assignment and Management Contract\",\"version\":1},\"userdoc\":{\"events\":{\"EmployeeAssigned(address,string)\":{\"notice\":\"Emitted when a new employee is assigned\"},\"EmployeeRemoved(address,string)\":{\"notice\":\"Emitted when an employee is removed\"}},\"kind\":\"user\",\"methods\":{\"assignNewEmployee(address,string)\":{\"notice\":\"Assigns a new employee with a specific role\"},\"constructor\":{\"notice\":\"Initializes the contract and sets the deployer as the owner\"},\"employeeCount()\":{\"notice\":\"Total number of employees currently assigned\"},\"hasRole(address,string)\":{\"notice\":\"Checks if an address has a specific role\"},\"removeEmployee(address,string)\":{\"notice\":\"Removes an employee's role\"}},\"notice\":\"Provides role-based access control with an owner and assigned employees\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Owner/employe_assignment.sol\":\"EmployeeAssignment\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Interface/Iemploye_assignment.sol\":{\"keccak256\":\"0xf193241286d526af195bdbdfe29778a33224c8bb5b1056101d85dd3326bef916\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e559023f4b159e62ec1422648392eee1687fd36a0041f731b0655106b7136db4\",\"dweb:/ipfs/QmZ1vgEaMB3tb5GFn5fe5pb9bgQoG1NpvNZ5TD3uX4aRmH\"]},\"Owner/employe_assignment.sol\":{\"keccak256\":\"0xa887a647ce09435949632a688ca9989e6c0eaf2b9a4e7a96f397bd02b5ee7a0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e7233aea91493ce2c602a8f17918f0b10cd03dc47279011b4485237d2b9dabd7\",\"dweb:/ipfs/QmYYT4ZpFCNZjVyMwEgsgTXLtkFMLDLRjZTB5EJpZ24GYW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 39,
								"contract": "Owner/employe_assignment.sol:EmployeeAssignment",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 42,
								"contract": "Owner/employe_assignment.sol:EmployeeAssignment",
								"label": "employeeCount",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 49,
								"contract": "Owner/employe_assignment.sol:EmployeeAssignment",
								"label": "employees",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(string => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_string_memory_ptr,t_bool)"
							},
							"t_mapping(t_string_memory_ptr,t_bool)": {
								"encoding": "mapping",
								"key": "t_string_memory_ptr",
								"label": "mapping(string => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_string_memory_ptr": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"EmployeeAssigned(address,string)": {
								"notice": "Emitted when a new employee is assigned"
							},
							"EmployeeRemoved(address,string)": {
								"notice": "Emitted when an employee is removed"
							}
						},
						"kind": "user",
						"methods": {
							"assignNewEmployee(address,string)": {
								"notice": "Assigns a new employee with a specific role"
							},
							"constructor": {
								"notice": "Initializes the contract and sets the deployer as the owner"
							},
							"employeeCount()": {
								"notice": "Total number of employees currently assigned"
							},
							"hasRole(address,string)": {
								"notice": "Checks if an address has a specific role"
							},
							"removeEmployee(address,string)": {
								"notice": "Removes an employee's role"
							}
						},
						"notice": "Provides role-based access control with an owner and assigned employees",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Interface/Iemploye_assignment.sol": {
				"ast": {
					"absolutePath": "Interface/Iemploye_assignment.sol",
					"exportedSymbols": {
						"IManagementAssignment": [
							32
						]
					},
					"id": 33,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IManagementAssignment",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "61:155:0",
								"text": "@title IManagementAssignment\n @notice Interface for Management Assignment contract\n @dev Declares events and functions without implementation"
							},
							"fullyImplemented": false,
							"id": 32,
							"linearizedBaseContracts": [
								32
							],
							"name": "IManagementAssignment",
							"nameLocation": "226:21:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "332:130:0",
										"text": "@notice Emitted when a new employee is assigned\n @param new_employes_assign The address of the newly assigned employee"
									},
									"eventSelector": "1792c8e673898c784b1ca693ab9a3a63415a61e4904b6b95d22081db24cfe7b2",
									"id": 7,
									"name": "new_employes_assign",
									"nameLocation": "474:19:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "new_employes_assign",
												"nameLocation": "510:19:0",
												"nodeType": "VariableDeclaration",
												"scope": 7,
												"src": "494:35:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "494:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "493:37:0"
									},
									"src": "468:63:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 8,
										"nodeType": "StructuredDocumentation",
										"src": "539:117:0",
										"text": "@notice Emitted when an employee is removed\n @param removedmanagement The address of the removed employee"
									},
									"eventSelector": "206356dc861520ee2cd02508f82f26120fdf144723d0cdb8807a81003ee4bfcf",
									"id": 12,
									"name": "employe_Removed",
									"nameLocation": "668:15:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"indexed": true,
												"mutability": "mutable",
												"name": "removedmanagement",
												"nameLocation": "700:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "684:33:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 9,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "683:35:0"
									},
									"src": "662:57:0"
								},
								{
									"documentation": {
										"id": 13,
										"nodeType": "StructuredDocumentation",
										"src": "807:114:0",
										"text": "@notice Assign a new employee (management member)\n @param new_employes The address of the new employee"
									},
									"functionSelector": "c805d4dc",
									"id": 18,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "assign_new_management",
									"nameLocation": "936:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "new_employes",
												"nameLocation": "966:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "958:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 14,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "958:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "957:22:0"
									},
									"returnParameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "988:0:0"
									},
									"scope": 32,
									"src": "927:62:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 19,
										"nodeType": "StructuredDocumentation",
										"src": "997:123:0",
										"text": "@notice Remove an employee from the management list by ID\n @param employeId The index of the employee to remove"
									},
									"functionSelector": "c05e625f",
									"id": 24,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "reAssign_management",
									"nameLocation": "1135:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "employeId",
												"nameLocation": "1160:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1155:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1155:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1154:16:0"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1179:0:0"
									},
									"scope": 32,
									"src": "1126:54:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1188:100:0",
										"text": "@notice Returns the full list of assigned employees\n @return Array of employee addresses"
									},
									"functionSelector": "d6ae880b",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "see_all_assigned_employes",
									"nameLocation": "1303:25:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1328:2:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "1354:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 27,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1354:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 28,
													"nodeType": "ArrayTypeName",
													"src": "1354:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1353:18:0"
									},
									"scope": 32,
									"src": "1294:78:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 33,
							"src": "216:1159:0",
							"usedErrors": [],
							"usedEvents": [
								7,
								12
							]
						}
					],
					"src": "33:1344:0"
				},
				"id": 0
			},
			"Owner/employe_assignment.sol": {
				"ast": {
					"absolutePath": "Owner/employe_assignment.sol",
					"exportedSymbols": {
						"EmployeeAssignment": [
							282
						],
						"IManagementAssignment": [
							32
						]
					},
					"id": 283,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 34,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:1"
						},
						{
							"absolutePath": "Interface/Iemploye_assignment.sol",
							"file": "../Interface/Iemploye_assignment.sol",
							"id": 35,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 283,
							"sourceUnit": 33,
							"src": "61:46:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "EmployeeAssignment",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 36,
								"nodeType": "StructuredDocumentation",
								"src": "111:243:1",
								"text": "@title Employee Assignment and Management Contract\n @notice Provides role-based access control with an owner and assigned employees\n @dev Abstract contract that can be inherited by other contracts to enforce employee-only actions"
							},
							"fullyImplemented": true,
							"id": 282,
							"linearizedBaseContracts": [
								282
							],
							"name": "EmployeeAssignment",
							"nameLocation": "372:18:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 37,
										"nodeType": "StructuredDocumentation",
										"src": "508:41:1",
										"text": "@notice Address of the contract owner"
									},
									"id": 39,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "572:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 282,
									"src": "555:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 38,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "555:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 40,
										"nodeType": "StructuredDocumentation",
										"src": "586:56:1",
										"text": "@notice Total number of employees currently assigned"
									},
									"functionSelector": "9047bf58",
									"id": 42,
									"mutability": "mutable",
									"name": "employeeCount",
									"nameLocation": "660:13:1",
									"nodeType": "VariableDeclaration",
									"scope": 282,
									"src": "648:25:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 41,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "648:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "682:72:1",
										"text": "@notice Mapping to track employee roles (address => role => hasRole)"
									},
									"id": 49,
									"mutability": "mutable",
									"name": "employees",
									"nameLocation": "813:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 282,
									"src": "760:62:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(string => bool))"
									},
									"typeName": {
										"id": 48,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 44,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "768:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "760:43:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(string => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 47,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 45,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "787:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"nodeType": "Mapping",
											"src": "779:23:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
												"typeString": "mapping(string => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 46,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "797:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 50,
										"nodeType": "StructuredDocumentation",
										"src": "930:174:1",
										"text": "@notice Emitted when a new employee is assigned\n @param employee The address of the newly assigned employee\n @param role The role assigned to the employee"
									},
									"eventSelector": "088567665d11bb1ca04896b9d3c620779f90a9f00f12488f6050a74eb11c2be5",
									"id": 56,
									"name": "EmployeeAssigned",
									"nameLocation": "1116:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"indexed": true,
												"mutability": "mutable",
												"name": "employee",
												"nameLocation": "1149:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "1133:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 51,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1133:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 54,
												"indexed": false,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1166:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "1159:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 53,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1159:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1132:39:1"
									},
									"src": "1110:62:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 57,
										"nodeType": "StructuredDocumentation",
										"src": "1180:155:1",
										"text": "@notice Emitted when an employee is removed\n @param employee The address of the removed employee\n @param role The role that was removed"
									},
									"eventSelector": "cf3bbb93629b62834974659efc838721fa2bd3b41cafd38b516ac86b661491e1",
									"id": 63,
									"name": "EmployeeRemoved",
									"nameLocation": "1347:15:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"indexed": true,
												"mutability": "mutable",
												"name": "employee",
												"nameLocation": "1379:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "1363:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1363:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 61,
												"indexed": false,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1396:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "1389:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 60,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1389:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1362:39:1"
									},
									"src": "1341:61:1"
								},
								{
									"body": {
										"id": 72,
										"nodeType": "Block",
										"src": "1622:37:1",
										"statements": [
											{
												"expression": {
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 67,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 39,
														"src": "1633:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 68,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1641:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 69,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1645:6:1",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1641:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1633:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 71,
												"nodeType": "ExpressionStatement",
												"src": "1633:18:1"
											}
										]
									},
									"documentation": {
										"id": 64,
										"nodeType": "StructuredDocumentation",
										"src": "1514:88:1",
										"text": " @notice Initializes the contract and sets the deployer as the owner"
									},
									"id": 73,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1619:2:1"
									},
									"returnParameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1622:0:1"
									},
									"scope": 282,
									"src": "1608:51:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 85,
										"nodeType": "Block",
										"src": "1866:106:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 80,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 77,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1885:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 78,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1889:6:1",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1885:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 79,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 39,
																"src": "1899:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1885:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "456d706c6f79656541737369676e6d656e743a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 81,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1906:45:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_be19c913aedcdbbb73b57c07a54f6509e976f3caab98f6dc15992d6cb31e18ad",
																"typeString": "literal_string \"EmployeeAssignment: caller is not the owner\""
															},
															"value": "EmployeeAssignment: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_be19c913aedcdbbb73b57c07a54f6509e976f3caab98f6dc15992d6cb31e18ad",
																"typeString": "literal_string \"EmployeeAssignment: caller is not the owner\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1877:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 82,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1877:75:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 83,
												"nodeType": "ExpressionStatement",
												"src": "1877:75:1"
											},
											{
												"id": 84,
												"nodeType": "PlaceholderStatement",
												"src": "1963:1:1"
											}
										]
									},
									"documentation": {
										"id": 74,
										"nodeType": "StructuredDocumentation",
										"src": "1769:70:1",
										"text": "@notice Ensures that only the contract owner can call the function"
									},
									"id": 86,
									"name": "onlyOwner",
									"nameLocation": "1854:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1863:2:1"
									},
									"src": "1845:127:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 98,
										"nodeType": "Block",
										"src": "2058:102:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 93,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 90,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2077:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 91,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2081:6:1",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2077:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 92,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 39,
																"src": "2091:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2077:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "456d706c6f79656541737369676e6d656e743a2063616c6c657220697320746865206f776e6572",
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2098:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4302a9b5cc34ecb197a037f71075603ef8193a5d8a10281369d2e51fb64bfbd8",
																"typeString": "literal_string \"EmployeeAssignment: caller is the owner\""
															},
															"value": "EmployeeAssignment: caller is the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4302a9b5cc34ecb197a037f71075603ef8193a5d8a10281369d2e51fb64bfbd8",
																"typeString": "literal_string \"EmployeeAssignment: caller is the owner\""
															}
														],
														"id": 89,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2069:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2069:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2069:71:1"
											},
											{
												"id": 97,
												"nodeType": "PlaceholderStatement",
												"src": "2151:1:1"
											}
										]
									},
									"documentation": {
										"id": 87,
										"nodeType": "StructuredDocumentation",
										"src": "1980:52:1",
										"text": "@notice Ensures that the caller is not the owner"
									},
									"id": 99,
									"name": "notOwner",
									"nameLocation": "2047:8:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2055:2:1"
									},
									"src": "2038:122:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 115,
										"nodeType": "Block",
										"src": "2275:91:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 106,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 102,
																"src": "2294:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 109,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2307:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2299:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 107,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2299:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 110,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2299:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2294:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "456d706c6f79656541737369676e6d656e743a207a65726f2061646472657373206e6f7420616c6c6f776564",
															"id": 112,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2311:46:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e1006398cc5245a4111dd76307aa991211f00d34cc0aab1564eced5b7f5c5c8b",
																"typeString": "literal_string \"EmployeeAssignment: zero address not allowed\""
															},
															"value": "EmployeeAssignment: zero address not allowed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e1006398cc5245a4111dd76307aa991211f00d34cc0aab1564eced5b7f5c5c8b",
																"typeString": "literal_string \"EmployeeAssignment: zero address not allowed\""
															}
														],
														"id": 105,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2286:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2286:72:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 114,
												"nodeType": "ExpressionStatement",
												"src": "2286:72:1"
											}
										]
									},
									"documentation": {
										"id": 100,
										"nodeType": "StructuredDocumentation",
										"src": "2168:54:1",
										"text": "@notice Ensures the caller is not the zero address"
									},
									"id": 116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "zero_Address",
									"nameLocation": "2237:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "2258:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "2250:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2250:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2249:11:1"
									},
									"returnParameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2275:0:1"
									},
									"scope": 282,
									"src": "2228:138:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "2482:116:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"baseExpression": {
																	"id": 120,
																	"name": "employees",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 49,
																	"src": "2501:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_bool_$_$",
																		"typeString": "mapping(address => mapping(string memory => bool))"
																	}
																},
																"id": 123,
																"indexExpression": {
																	"expression": {
																		"id": 121,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2511:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 122,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2515:6:1",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2511:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2501:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
																	"typeString": "mapping(string memory => bool)"
																}
															},
															"id": 125,
															"indexExpression": {
																"hexValue": "41646d696e",
																"id": 124,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2523:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_a729ef4e25027bc652fc8b5c4d1d902947361fa7c8e7b4905e877823f27331b3",
																	"typeString": "literal_string \"Admin\""
																},
																"value": "Admin"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2501:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "456d706c6f79656541737369676e6d656e743a2063616c6c6572206973206e6f7420616e2061646d696e",
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2533:44:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_57fda6a175f75ede4a8baf5c39fe56f07c28dcda9043c9d6e7667d5c8443bd33",
																"typeString": "literal_string \"EmployeeAssignment: caller is not an admin\""
															},
															"value": "EmployeeAssignment: caller is not an admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_57fda6a175f75ede4a8baf5c39fe56f07c28dcda9043c9d6e7667d5c8443bd33",
																"typeString": "literal_string \"EmployeeAssignment: caller is not an admin\""
															}
														],
														"id": 119,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:85:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 128,
												"nodeType": "ExpressionStatement",
												"src": "2493:85:1"
											},
											{
												"id": 129,
												"nodeType": "PlaceholderStatement",
												"src": "2589:1:1"
											}
										]
									},
									"documentation": {
										"id": 117,
										"nodeType": "StructuredDocumentation",
										"src": "2374:77:1",
										"text": "@notice Ensures that only employees with Admin role can call the function"
									},
									"id": 131,
									"name": "onlyemployes",
									"nameLocation": "2466:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2479:2:1"
									},
									"src": "2457:141:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "2705:113:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2724:31:1",
															"subExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 135,
																		"name": "employees",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 49,
																		"src": "2725:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_bool_$_$",
																			"typeString": "mapping(address => mapping(string memory => bool))"
																		}
																	},
																	"id": 138,
																	"indexExpression": {
																		"expression": {
																			"id": 136,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2735:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2739:6:1",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2735:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2725:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
																		"typeString": "mapping(string memory => bool)"
																	}
																},
																"id": 140,
																"indexExpression": {
																	"hexValue": "41646d696e",
																	"id": 139,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2747:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_a729ef4e25027bc652fc8b5c4d1d902947361fa7c8e7b4905e877823f27331b3",
																		"typeString": "literal_string \"Admin\""
																	},
																	"value": "Admin"
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2725:30:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "456d706c6f79656541737369676e6d656e743a2063616c6c657220697320616e2061646d696e",
															"id": 142,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2757:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7492fce5e006fcffaee9124c7f362d98c96b7dd94d911dc9cbbe9a14b9ab0ea4",
																"typeString": "literal_string \"EmployeeAssignment: caller is an admin\""
															},
															"value": "EmployeeAssignment: caller is an admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7492fce5e006fcffaee9124c7f362d98c96b7dd94d911dc9cbbe9a14b9ab0ea4",
																"typeString": "literal_string \"EmployeeAssignment: caller is an admin\""
															}
														],
														"id": 134,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2716:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2716:82:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "ExpressionStatement",
												"src": "2716:82:1"
											},
											{
												"id": 145,
												"nodeType": "PlaceholderStatement",
												"src": "2809:1:1"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "2606:70:1",
										"text": "@notice Ensures that the caller is not an employee with Admin role"
									},
									"id": 147,
									"name": "notEmployes",
									"nameLocation": "2691:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2702:2:1"
									},
									"src": "2682:136:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "3274:463:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 161,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 152,
																				"src": "3309:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_calldata_ptr",
																					"typeString": "string calldata"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_string_calldata_ptr",
																					"typeString": "string calldata"
																				}
																			],
																			"id": 160,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3303:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																				"typeString": "type(bytes storage pointer)"
																			},
																			"typeName": {
																				"id": 159,
																				"name": "bytes",
																				"nodeType": "ElementaryTypeName",
																				"src": "3303:5:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3303:11:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	],
																	"id": 158,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967288,
																	"src": "3293:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 163,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3293:22:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "456d706c6f7965",
																				"id": 167,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3335:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_1b5820bbdd6245f18ccc5f26264ee6c30ce28dc4f8aa115fd41c4aa07d75cb14",
																					"typeString": "literal_string \"Employe\""
																				},
																				"value": "Employe"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_1b5820bbdd6245f18ccc5f26264ee6c30ce28dc4f8aa115fd41c4aa07d75cb14",
																					"typeString": "literal_string \"Employe\""
																				}
																			],
																			"id": 166,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3329:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																				"typeString": "type(bytes storage pointer)"
																			},
																			"typeName": {
																				"id": 165,
																				"name": "bytes",
																				"nodeType": "ElementaryTypeName",
																				"src": "3329:5:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 168,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3329:16:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 164,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967288,
																	"src": "3319:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 169,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3319:27:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "3293:53:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "456d706c6f79656541737369676e6d656e743a20696e76616c696420726f6c65",
															"id": 171,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3348:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_86182b94da1bee776bc5aecea0e0e720034d357b64941e4469837fe3b3503061",
																"typeString": "literal_string \"EmployeeAssignment: invalid role\""
															},
															"value": "EmployeeAssignment: invalid role"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_86182b94da1bee776bc5aecea0e0e720034d357b64941e4469837fe3b3503061",
																"typeString": "literal_string \"EmployeeAssignment: invalid role\""
															}
														],
														"id": 157,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3285:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3285:98:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 173,
												"nodeType": "ExpressionStatement",
												"src": "3285:98:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 175,
																"name": "newEmployee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 150,
																"src": "3402:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 178,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3425:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 177,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3417:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 176,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3417:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3417:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3402:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "456d706c6f79656541737369676e6d656e743a20656d706c6f7965652063616e6e6f74206265207a65726f2061646472657373",
															"id": 181,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3429:53:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_297a7e8d72219be430b891b5919353f797e8c178d6dd9d1175f05469d21b3625",
																"typeString": "literal_string \"EmployeeAssignment: employee cannot be zero address\""
															},
															"value": "EmployeeAssignment: employee cannot be zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_297a7e8d72219be430b891b5919353f797e8c178d6dd9d1175f05469d21b3625",
																"typeString": "literal_string \"EmployeeAssignment: employee cannot be zero address\""
															}
														],
														"id": 174,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3394:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3394:89:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 183,
												"nodeType": "ExpressionStatement",
												"src": "3394:89:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3502:29:1",
															"subExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 185,
																		"name": "employees",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 49,
																		"src": "3503:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_bool_$_$",
																			"typeString": "mapping(address => mapping(string memory => bool))"
																		}
																	},
																	"id": 187,
																	"indexExpression": {
																		"id": 186,
																		"name": "newEmployee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 150,
																		"src": "3513:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3503:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
																		"typeString": "mapping(string memory => bool)"
																	}
																},
																"id": 189,
																"indexExpression": {
																	"id": 188,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 152,
																	"src": "3526:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_calldata_ptr",
																		"typeString": "string calldata"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3503:28:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "456d706c6f79656541737369676e6d656e743a20656d706c6f79656520616c726561647920686173207468697320726f6c65",
															"id": 191,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3533:52:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9d7f46a4efa9ba829c7bf9205387b88a70997e6243b2f3d0bcd5b43be87e81cd",
																"typeString": "literal_string \"EmployeeAssignment: employee already has this role\""
															},
															"value": "EmployeeAssignment: employee already has this role"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9d7f46a4efa9ba829c7bf9205387b88a70997e6243b2f3d0bcd5b43be87e81cd",
																"typeString": "literal_string \"EmployeeAssignment: employee already has this role\""
															}
														],
														"id": 184,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3494:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3494:92:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 193,
												"nodeType": "ExpressionStatement",
												"src": "3494:92:1"
											},
											{
												"expression": {
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 194,
																"name": "employees",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 49,
																"src": "3607:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(string memory => bool))"
																}
															},
															"id": 197,
															"indexExpression": {
																"id": 195,
																"name": "newEmployee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 150,
																"src": "3617:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3607:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
																"typeString": "mapping(string memory => bool)"
															}
														},
														"id": 198,
														"indexExpression": {
															"id": 196,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "3630:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3607:28:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 199,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3638:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3607:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 201,
												"nodeType": "ExpressionStatement",
												"src": "3607:35:1"
											},
											{
												"expression": {
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "3653:15:1",
													"subExpression": {
														"id": 202,
														"name": "employeeCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 42,
														"src": "3653:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 204,
												"nodeType": "ExpressionStatement",
												"src": "3653:15:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 206,
															"name": "newEmployee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "3711:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 207,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "3724:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														],
														"id": 205,
														"name": "EmployeeAssigned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "3694:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (address,string memory)"
														}
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3694:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 209,
												"nodeType": "EmitStatement",
												"src": "3689:40:1"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "2937:242:1",
										"text": " @notice Assigns a new employee with a specific role\n @dev Only the owner can assign new employees\n @param newEmployee Address of the employee to be assigned\n @param role Role to assign to the employee"
									},
									"functionSelector": "a5623ffc",
									"id": 211,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 155,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 154,
												"name": "onlyOwner",
												"nameLocations": [
													"3264:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 86,
												"src": "3264:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "3264:9:1"
										}
									],
									"name": "assignNewEmployee",
									"nameLocation": "3194:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "newEmployee",
												"nameLocation": "3220:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "3212:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3212:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3249:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "3233:20:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 151,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3233:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3211:43:1"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3274:0:1"
									},
									"scope": 282,
									"src": "3185:552:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 263,
										"nodeType": "Block",
										"src": "4068:355:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 225,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 216,
																				"src": "4103:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_calldata_ptr",
																					"typeString": "string calldata"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_string_calldata_ptr",
																					"typeString": "string calldata"
																				}
																			],
																			"id": 224,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4097:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																				"typeString": "type(bytes storage pointer)"
																			},
																			"typeName": {
																				"id": 223,
																				"name": "bytes",
																				"nodeType": "ElementaryTypeName",
																				"src": "4097:5:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 226,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4097:11:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	],
																	"id": 222,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967288,
																	"src": "4087:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 227,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4087:22:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "456d706c6f7965",
																				"id": 231,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4129:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_1b5820bbdd6245f18ccc5f26264ee6c30ce28dc4f8aa115fd41c4aa07d75cb14",
																					"typeString": "literal_string \"Employe\""
																				},
																				"value": "Employe"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_1b5820bbdd6245f18ccc5f26264ee6c30ce28dc4f8aa115fd41c4aa07d75cb14",
																					"typeString": "literal_string \"Employe\""
																				}
																			],
																			"id": 230,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4123:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																				"typeString": "type(bytes storage pointer)"
																			},
																			"typeName": {
																				"id": 229,
																				"name": "bytes",
																				"nodeType": "ElementaryTypeName",
																				"src": "4123:5:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 232,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4123:16:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 228,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967288,
																	"src": "4113:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 233,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4113:27:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "4087:53:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "456d706c6f79656541737369676e6d656e743a20696e76616c696420726f6c65",
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4142:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_86182b94da1bee776bc5aecea0e0e720034d357b64941e4469837fe3b3503061",
																"typeString": "literal_string \"EmployeeAssignment: invalid role\""
															},
															"value": "EmployeeAssignment: invalid role"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_86182b94da1bee776bc5aecea0e0e720034d357b64941e4469837fe3b3503061",
																"typeString": "literal_string \"EmployeeAssignment: invalid role\""
															}
														],
														"id": 221,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4079:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4079:98:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 237,
												"nodeType": "ExpressionStatement",
												"src": "4079:98:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"baseExpression": {
																	"id": 239,
																	"name": "employees",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 49,
																	"src": "4196:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_bool_$_$",
																		"typeString": "mapping(address => mapping(string memory => bool))"
																	}
																},
																"id": 241,
																"indexExpression": {
																	"id": 240,
																	"name": "employee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "4206:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4196:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
																	"typeString": "mapping(string memory => bool)"
																}
															},
															"id": 243,
															"indexExpression": {
																"id": 242,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 216,
																"src": "4216:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_calldata_ptr",
																	"typeString": "string calldata"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4196:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "456d706c6f79656541737369676e6d656e743a20656d706c6f79656520646f6573206e6f742068617665207468697320726f6c65",
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4223:54:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_871c7eb853fc7a9b82130607fb18a7c52a6e84c5c3334204183f74d75be26854",
																"typeString": "literal_string \"EmployeeAssignment: employee does not have this role\""
															},
															"value": "EmployeeAssignment: employee does not have this role"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_871c7eb853fc7a9b82130607fb18a7c52a6e84c5c3334204183f74d75be26854",
																"typeString": "literal_string \"EmployeeAssignment: employee does not have this role\""
															}
														],
														"id": 238,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4188:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4188:90:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 246,
												"nodeType": "ExpressionStatement",
												"src": "4188:90:1"
											},
											{
												"expression": {
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 247,
																"name": "employees",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 49,
																"src": "4299:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(string memory => bool))"
																}
															},
															"id": 250,
															"indexExpression": {
																"id": 248,
																"name": "employee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 214,
																"src": "4309:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4299:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
																"typeString": "mapping(string memory => bool)"
															}
														},
														"id": 251,
														"indexExpression": {
															"id": 249,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "4319:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4299:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 252,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4327:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "4299:33:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 254,
												"nodeType": "ExpressionStatement",
												"src": "4299:33:1"
											},
											{
												"expression": {
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "--",
													"prefix": false,
													"src": "4343:15:1",
													"subExpression": {
														"id": 255,
														"name": "employeeCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 42,
														"src": "4343:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "4343:15:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 259,
															"name": "employee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "4400:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 260,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "4410:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														],
														"id": 258,
														"name": "EmployeeRemoved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 63,
														"src": "4384:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (address,string memory)"
														}
													},
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4384:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 262,
												"nodeType": "EmitStatement",
												"src": "4379:36:1"
											}
										]
									},
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "3745:234:1",
										"text": " @notice Removes an employee's role\n @dev Only the owner can remove employee roles\n @param employee Address of the employee to remove the role from\n @param role Role to remove from the employee"
									},
									"functionSelector": "559b9b4c",
									"id": 264,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 219,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 218,
												"name": "onlyOwner",
												"nameLocations": [
													"4058:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 86,
												"src": "4058:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "4058:9:1"
										}
									],
									"name": "removeEmployee",
									"nameLocation": "3994:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "employee",
												"nameLocation": "4017:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "4009:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4009:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4043:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "4027:20:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 215,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4027:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4008:40:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4068:0:1"
									},
									"scope": 282,
									"src": "3985:438:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 280,
										"nodeType": "Block",
										"src": "4733:50:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 274,
															"name": "employees",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 49,
															"src": "4751:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(string memory => bool))"
															}
														},
														"id": 276,
														"indexExpression": {
															"id": 275,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 267,
															"src": "4761:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4751:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
															"typeString": "mapping(string memory => bool)"
														}
													},
													"id": 278,
													"indexExpression": {
														"id": 277,
														"name": "role",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 269,
														"src": "4770:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_calldata_ptr",
															"typeString": "string calldata"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4751:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 273,
												"id": 279,
												"nodeType": "Return",
												"src": "4744:31:1"
											}
										]
									},
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "4431:211:1",
										"text": " @notice Checks if an address has a specific role\n @param account Address to check\n @param role Role to check for\n @return bool True if the account has the specified role"
									},
									"functionSelector": "217fe6c6",
									"id": 281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "4657:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4673:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4665:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4665:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4698:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4682:20:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 268,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4682:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4664:39:1"
									},
									"returnParameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4727:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 271,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4727:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4726:6:1"
									},
									"scope": 282,
									"src": "4648:135:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 283,
							"src": "354:4432:1",
							"usedErrors": [],
							"usedEvents": [
								56,
								63
							]
						}
					],
					"src": "33:4753:1"
				},
				"id": 1
			}
		}
	}
}